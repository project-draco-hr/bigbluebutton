{
  long timeDiff;
  while (running) {
    try {
      Thread.sleep(interval);
    }
 catch (    InterruptedException e) {
    }
    if (!running) {
      break;
    }
    timeDiff=System.currentTimeMillis() - lastHeartbeat;
    if (timeDiff > maxHeartbeatInterval) {
      try {
        Client c=connection.getESLClient();
        log.info("HeartbeatMonitor did not get a heartbeat event in time... reconnecting");
        if (c.canSend()) {
          log.info("Logging off fom [" + connection.toString() + "]");
          connection.disconnect();
        }
        log.info("Logging in as [" + connection.getPassword() + "] to ["+ connection.getHostname()+ ":"+ connection.getPort()+ "]");
        try {
          connection.connect();
          eventListner.startup();
          lastHeartbeat=System.currentTimeMillis();
        }
 catch (        InboundConnectionFailure ce) {
          log.error("HeartbeatMonitor Connect to FreeSwitch ESL socket failed, will retry...",ce);
        }
      }
 catch (      IllegalStateException ise) {
        log.error("HeartbeatMonitor Ex",ise);
      }
catch (      Exception e) {
        log.error("HeartbeatMonitor Ex",e);
      }
    }
    if (intervalLoopCount == 5) {
      Calendar cal=Calendar.getInstance();
      cal.setTimeInMillis(lastHeartbeat);
      log.debug("HeartbeatMonitor running... last HB [{}] diff [{}]",cal.getTime(),timeDiff);
      intervalLoopCount=0;
    }
    intervalLoopCount++;
  }
}
