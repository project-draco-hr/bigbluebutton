{
  int version=in.getUnsignedShort();
  int count=in.getUnsignedShort();
  if (log.isDebugEnabled()) {
    log.debug("Skip headers");
    log.debug("Version: " + version);
    log.debug("Count: " + count);
  }
  if (count == 0) {
    return Collections.EMPTY_MAP;
  }
  Deserializer deserializer=new Deserializer();
  Input input;
  if (version == 3) {
    input=new org.red5.io.amf3.Input(in);
  }
 else {
    input=new org.red5.io.amf.Input(in);
  }
  Map<String,Object> result=new HashMap<String,Object>();
  for (int i=0; i < count; i++) {
    String name=org.red5.io.amf.Input.getString(in);
    boolean required=in.get() == 0x01;
    int size=in.getInt();
    Object value=deserializer.deserialize(input,Object.class);
    if (log.isDebugEnabled()) {
      log.debug("Header: {} Required: {} Size: {} Value: {}",new Object[]{name,required,size,value});
    }
    result.put(name,value);
  }
  return result;
}
