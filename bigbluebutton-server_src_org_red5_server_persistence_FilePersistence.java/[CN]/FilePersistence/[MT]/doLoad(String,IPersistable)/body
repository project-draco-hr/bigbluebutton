{
  IPersistable result=object;
  Resource data=resources.getResource(name);
  if (data == null || !data.exists()) {
    return null;
  }
  FileInputStream input;
  String filename;
  try {
    File fp=data.getFile();
    if (fp.length() == 0) {
      log.error("The file at " + data.getFilename() + " is empty.");
      return null;
    }
    filename=fp.getAbsolutePath();
    input=new FileInputStream(filename);
  }
 catch (  FileNotFoundException e) {
    log.error("The file at " + data.getFilename() + " does not exist.");
    return null;
  }
catch (  IOException e) {
    log.error("Could not load file from " + data.getFilename() + '.',e);
    return null;
  }
  try {
    ByteBuffer buf=ByteBuffer.allocate(input.available());
    try {
      ServletUtils.copy(input,buf.asOutputStream());
      buf.flip();
      Input in=new Input(buf);
      Deserializer deserializer=new Deserializer();
      String className=deserializer.deserialize(in,String.class);
      if (result == null) {
        try {
          Class<?> theClass=Class.forName(className);
          Constructor<?> constructor=null;
          try {
            for (            Class<?> interfaceClass : in.getClass().getInterfaces()) {
              constructor=theClass.getConstructor(new Class[]{interfaceClass});
              if (constructor != null) {
                break;
              }
            }
            if (constructor == null) {
              throw new NoSuchMethodException();
            }
            result=(IPersistable)constructor.newInstance(in);
          }
 catch (          NoSuchMethodException err) {
            result=(IPersistable)theClass.newInstance();
            result.deserialize(in);
          }
catch (          InvocationTargetException err) {
            result=(IPersistable)theClass.newInstance();
            result.deserialize(in);
          }
        }
 catch (        ClassNotFoundException cnfe) {
          log.error("Unknown class " + className);
          return null;
        }
catch (        IllegalAccessException iae) {
          log.error("Illegal access.",iae);
          return null;
        }
catch (        InstantiationException ie) {
          log.error("Could not instantiate class " + className);
          return null;
        }
        result.setName(getObjectName(name));
        result.setPath(getObjectPath(name,result.getName()));
      }
 else {
        String resultClass=result.getClass().getName();
        if (!resultClass.equals(className)) {
          log.error("The classes differ: " + resultClass + " != "+ className);
          return null;
        }
        result.deserialize(in);
      }
    }
  finally {
      buf.release();
      buf=null;
    }
    if (result.getStore() != this) {
      result.setStore(this);
    }
    super.save(result);
    if (log.isDebugEnabled()) {
      log.debug("Loaded persistent object " + result + " from "+ filename);
    }
  }
 catch (  IOException e) {
    log.error("Could not load file at " + filename);
    return null;
  }
  return result;
}
