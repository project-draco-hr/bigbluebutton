{
  String path=getObjectFilepath(object,true);
  Resource resPath=resources.getResource(path);
  File file;
  try {
    file=resPath.getFile();
  }
 catch (  IOException err) {
    log.error("Could not create resource file for path " + path,err);
    return false;
  }
  if (!file.isDirectory() && !file.mkdirs()) {
    log.error("Could not create directory " + file.getAbsolutePath());
    return false;
  }
  String filename=getObjectFilename(object);
  Resource resFile=resources.getResource(filename);
  try {
    ByteBuffer buf;
    int initialSize=8192;
    if (resFile.exists()) {
      try {
        initialSize+=(int)resFile.getFile().length();
      }
 catch (      IOException e) {
      }
    }
    buf=ByteBuffer.allocate(initialSize);
    try {
      buf.setAutoExpand(true);
      Output out=new Output(buf);
      out.writeString(object.getClass().getName());
      object.serialize(out);
      buf.flip();
      FileOutputStream output=new FileOutputStream(resFile.getFile().getAbsolutePath());
      ServletUtils.copy(buf.asInputStream(),output);
      output.close();
    }
  finally {
      buf.release();
      buf=null;
    }
    if (log.isDebugEnabled()) {
      log.debug("Stored persistent object " + object + " at "+ filename);
    }
    return true;
  }
 catch (  IOException e) {
    log.error("Could not create / write file " + filename,e);
    return false;
  }
}
