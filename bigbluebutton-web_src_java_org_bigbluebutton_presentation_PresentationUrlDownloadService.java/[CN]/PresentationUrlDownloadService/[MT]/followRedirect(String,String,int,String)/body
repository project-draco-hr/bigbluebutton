{
  if (redirectCount > maxRedirects) {
    log.error("Max redirect reached for meeting=[{}] with url=[{}]",meetingId,origUrl);
    return null;
  }
  URL presUrl;
  try {
    presUrl=new URL(redirectUrl);
  }
 catch (  MalformedURLException e) {
    log.error("Malformed url=[{}] for meeting=[{}]",redirectUrl,meetingId);
    return null;
  }
  HttpURLConnection conn;
  try {
    conn=(HttpURLConnection)presUrl.openConnection();
    conn.setReadTimeout(5000);
    conn.addRequestProperty("Accept-Language","en-US,en;q=0.8");
    conn.addRequestProperty("User-Agent","Mozilla");
    int status=conn.getResponseCode();
    if (status != HttpURLConnection.HTTP_OK) {
      if (status == HttpURLConnection.HTTP_MOVED_TEMP || status == HttpURLConnection.HTTP_MOVED_PERM || status == HttpURLConnection.HTTP_SEE_OTHER) {
        String newUrl=conn.getHeaderField("Location");
        return followRedirect(meetingId,newUrl,redirectCount + 1,origUrl);
      }
 else {
        log.error("Invalid HTTP response=[{}] for url=[{}] with meeting[{}]",status,redirectUrl,meetingId);
        return null;
      }
    }
 else {
      return redirectUrl;
    }
  }
 catch (  IOException e) {
    log.error("IOException for url=[{}] with meeting[{}]",redirectUrl,meetingId);
    return null;
  }
}
