{
  if (value == null) {
    return "<null>";
  }
  Class<?> type=value.getClass();
  if (type.equals(Integer.class) || type.equals(Double.class) || type.equals(Boolean.class)|| type.equals(String.class)|| type.equals(Date.class)) {
    return value;
  }
 else   if (type.equals(Long.class)) {
    return ((Long)value).toString();
  }
 else   if (type.isArray() && type.getComponentType().equals(byte.class)) {
    return value;
  }
 else   if (type.isArray()) {
    int length=Array.getLength(value);
    Vector<Object> res=new Vector<Object>();
    for (int i=0; i < length; i++) {
      res.add(getXMLRPCValue(Array.get(value,i)));
    }
    return res;
  }
 else   if (value instanceof Map) {
    Hashtable<Object,Object> res=new Hashtable<Object,Object>();
    for (    Map.Entry<?,?> entry : ((Map<?,?>)value).entrySet()) {
      res.put(entry.getKey(),getXMLRPCValue(entry.getValue()));
    }
    return res;
  }
 else   if (value instanceof Collection) {
    Collection<?> coll=(Collection<?>)value;
    Vector<Object> result=new Vector<Object>(coll.size());
    for (    Object item : coll) {
      result.add(getXMLRPCValue(item));
    }
    return result;
  }
  throw new RuntimeException("Don't know how to convert " + value);
}
