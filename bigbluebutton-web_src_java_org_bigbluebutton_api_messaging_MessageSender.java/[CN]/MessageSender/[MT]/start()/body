{
  GenericObjectPoolConfig config=new GenericObjectPoolConfig();
  config.setMaxTotal(32);
  config.setMaxIdle(8);
  config.setMinIdle(1);
  config.setTestOnBorrow(true);
  config.setTestOnReturn(true);
  config.setTestWhileIdle(true);
  config.setNumTestsPerEvictionRun(12);
  config.setMaxWaitMillis(5000);
  config.setTimeBetweenEvictionRunsMillis(60000);
  config.setBlockWhenExhausted(true);
  redisPool=new JedisPool(config,host,port,Protocol.DEFAULT_TIMEOUT,null,Protocol.DEFAULT_DATABASE,"BbbWebPub");
  log.info("Redis message publisher starting!");
  try {
    sendMessage=true;
    Runnable messageSender=new Runnable(){
      public void run(){
        while (sendMessage) {
          try {
            MessageToSend msg=messages.take();
            publish(msg.getChannel(),msg.getMessage());
          }
 catch (          InterruptedException e) {
            log.warn("Failed to get message from queue.");
          }
        }
      }
    }
;
    msgSenderExec.execute(messageSender);
  }
 catch (  Exception e) {
    log.error("Error subscribing to channels: " + e.getMessage());
  }
}
