{
  if (channel.equalsIgnoreCase(MessagingConstants.TO_CHAT_CHANNEL)) {
    JsonParser parser=new JsonParser();
    JsonObject obj=(JsonObject)parser.parse(message);
    if (obj.has("header") && obj.has("payload")) {
      JsonObject header=(JsonObject)obj.get("header");
      if (header.has("name")) {
        String messageName=header.get("name").getAsString();
        if (SendConversionUpdate.SEND_CONVERSION_UPDATE.equals(messageName)) {
          SendConversionUpdate msg=SendConversionUpdate.fromJson(message);
          System.out.println("in messageHandler - sendConversionCompleted");
          sendConversionUpdate(msg.messageKey,msg.meetingId,msg.code,msg.presId,msg.presName);
          bbbInGW.sendConversionUpdate(msg.messageKey,msg.meetingId,msg.code,msg.presId,msg.presName);
        }
 else         if (ResizeAndMoveSlide.RESIZE_AND_MOVE_SLIDE.equals(messageName)) {
          System.out.println("in messageHandler - resizeAndMoveSlide");
          ResizeAndMoveSlide msg=ResizeAndMoveSlide.fromJson(message);
          bbbInGW.resizeAndMoveSlide(msg.meetingId,msg.xOffset,msg.yOffset,msg.widthRatio,msg.heightRatio);
        }
 else         if (GetPresentationInfo.GET_PRESENTATION_INFO.equals(messageName)) {
          System.out.println("in messageHandler - getPresentationInfo");
          GetPresentationInfo msg=GetPresentationInfo.fromJson(message);
          bbbInGW.getPresentationInfo(msg.meetingId,msg.requesterId,msg.replyTo);
        }
 else         if (SendConversionCompleted.SEND_CONVERSION_COMPLETED.equals(messageName)) {
          System.out.println("in messageHandler - sendConversionCompleted");
          SendConversionCompleted msg=SendConversionCompleted.fromJson(message);
          bbbInGW.sendConversionCompleted(msg.messageKey,msg.meetingId,msg.code,msg.presId,msg.numPages,msg.presName,msg.presBaseUrl);
        }
      }
    }
  }
}
