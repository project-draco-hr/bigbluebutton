{
  _usePrefixMatch=false;
  _useGreaterThan=false;
  _isCompound=false;
  if (str == null && str.length() == 0) {
    _tuple=new String[0];
    return;
  }
  int amp=str.indexOf("&");
  if (amp >= 0) {
    _isCompound=true;
    VersionID firstPart=new VersionID(str.substring(0,amp));
    _rest=new VersionID(str.substring(amp + 1));
    _tuple=firstPart._tuple;
    _usePrefixMatch=firstPart._usePrefixMatch;
    _useGreaterThan=firstPart._useGreaterThan;
  }
 else {
    if (str.endsWith("+")) {
      _useGreaterThan=true;
      str=str.substring(0,str.length() - 1);
    }
 else     if (str.endsWith("*")) {
      _usePrefixMatch=true;
      str=str.substring(0,str.length() - 1);
    }
    ArrayList list=new ArrayList();
    int start=0;
    for (int i=0; i < str.length(); i++) {
      if (".-_".indexOf(str.charAt(i)) != -1) {
        if (start < i) {
          String value=str.substring(start,i);
          list.add(value);
        }
        start=i + 1;
      }
    }
    if (start < str.length()) {
      list.add(str.substring(start,str.length()));
    }
    _tuple=new String[list.size()];
    _tuple=(String[])list.toArray(_tuple);
  }
}
