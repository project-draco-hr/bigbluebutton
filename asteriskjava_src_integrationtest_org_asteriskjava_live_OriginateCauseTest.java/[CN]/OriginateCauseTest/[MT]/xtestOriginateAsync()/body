{
  final String source;
  source="Local/1337@from-local";
  server.originateToExtensionAsync(source,"conference","1399",1,timeout,new CallerId("AJ Test Call","08003301000"),null,new OriginateCallback(){
    public void onDialing(    final AsteriskChannel c){
      channel=c;
      System.err.println("Dialing: " + channel);
      channel.addPropertyChangeListener(new PropertyChangeListener(){
        public void propertyChange(        PropertyChangeEvent evt){
          System.err.println("PropertyChange (" + ((AsteriskChannel)evt.getSource()).getName() + ") "+ evt.getPropertyName()+ ": "+ evt.getOldValue()+ " => "+ evt.getNewValue());
        }
      }
);
      ScheduledExecutorService scheduler=Executors.newScheduledThreadPool(1);
      scheduler.schedule(new Runnable(){
        public void run(){
          System.out.println("Tata");
          try {
            c.hangup();
          }
 catch (          Exception e) {
            e.printStackTrace();
          }
        }
      }
,10,TimeUnit.SECONDS);
    }
    public void onSuccess(    AsteriskChannel c){
      channel=c;
      System.err.println("Success: " + c);
      showInfo(c);
      try {
      }
 catch (      Exception e) {
        e.printStackTrace();
      }
    }
    public void onNoAnswer(    AsteriskChannel c){
      channel=c;
      System.err.println("No Answer: " + c);
      showInfo(c);
    }
    public void onBusy(    AsteriskChannel c){
      channel=c;
      System.err.println("Busy: " + c);
      showInfo(c);
    }
    public void onFailure(    LiveException cause){
      System.err.println("Failed: " + cause.getMessage());
    }
  }
);
  Thread.sleep(20000L);
  System.err.println("final state: " + channel);
  if (channel != null) {
    System.err.println("final state linked channels: " + channel.getLinkedChannelHistory());
  }
}
