{
  System.out.println("Checking message: " + pattern + " "+ channel+ " "+ message);
  if (channel.equalsIgnoreCase(MessagingConstants.TO_MEETING_CHANNEL)) {
    IMessage msg=MessageFromJsonConverter.convert(message);
    if (msg != null) {
      if (msg instanceof EndMeetingMessage) {
        EndMeetingMessage emm=(EndMeetingMessage)msg;
        log.info("Received end meeting request. Meeting id [{}]",emm.meetingId);
        bbbGW.endMeeting(emm.meetingId);
      }
 else       if (msg instanceof CreateMeetingMessage) {
        CreateMeetingMessage emm=(CreateMeetingMessage)msg;
        bbbGW.createMeeting2(emm.id,emm.name,emm.record,emm.voiceBridge,emm.duration);
      }
 else       if (msg instanceof RegisterUserMessage) {
        RegisterUserMessage emm=(RegisterUserMessage)msg;
        bbbGW.registerUser(emm.meetingID,emm.internalUserId,emm.fullname,emm.role,emm.externUserID,emm.authToken);
      }
 else       if (msg instanceof DestroyMeetingMessage) {
        DestroyMeetingMessage emm=(DestroyMeetingMessage)msg;
        log.info("Received destroy meeting request. Meeting id [{}]",emm.meetingId);
        bbbGW.destroyMeeting(emm.meetingId);
      }
 else       if (msg instanceof ValidateAuthTokenMessage) {
        ValidateAuthTokenMessage emm=(ValidateAuthTokenMessage)msg;
        log.info("Received ValidateAuthTokenMessage toekn request. Meeting id [{}]",emm.meetingId);
        bbbGW.validateAuthToken(emm.meetingId,emm.userId,emm.token,emm.replyTo);
      }
 else       if (msg instanceof UserConnectedToGlobalAudio) {
        UserConnectedToGlobalAudio emm=(UserConnectedToGlobalAudio)msg;
        bbbGW.userConnectedToGlobalAudio(emm.voiceConf,emm.userid,emm.name);
      }
 else       if (msg instanceof UserDisconnectedFromGlobalAudio) {
        UserDisconnectedFromGlobalAudio emm=(UserDisconnectedFromGlobalAudio)msg;
        bbbGW.userConnectedToGlobalAudio(emm.voiceConf,emm.userid,emm.name);
      }
    }
  }
 else   if (channel.equalsIgnoreCase(MessagingConstants.TO_SYSTEM_CHANNEL)) {
    IMessage msg=MessageFromJsonConverter.convert(message);
    if (msg != null) {
      if (msg instanceof KeepAliveMessage) {
        KeepAliveMessage emm=(KeepAliveMessage)msg;
        log.info("Received KeepAliveMessage request. Meeting id [{}]",emm.keepAliveId);
        bbbGW.isAliveAudit(emm.keepAliveId);
      }
    }
  }
}
