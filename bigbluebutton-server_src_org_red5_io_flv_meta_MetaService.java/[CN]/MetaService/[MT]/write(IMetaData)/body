{
  IMetaCue[] metaArr=meta.getMetaCue();
  FLVReader reader=new FLVReader(file,false);
  FLVWriter writer=new FLVWriter(fos,false);
  ITag tag=null;
  if (reader.hasMoreTags()) {
    tag=reader.readTag();
    if (tag.getDataType() == IoConstants.TYPE_METADATA) {
      if (!reader.hasMoreTags())       throw new IOException("File we're writing is metadata only?");
    }
  }
  meta.setDuration(((double)reader.getDuration() / 1000));
  meta.setVideoCodecId(reader.getVideoCodecId());
  meta.setAudioCodecId(reader.getAudioCodecId());
  ITag injectedTag=injectMetaData(meta,tag);
  injectedTag.setPreviousTagSize(0);
  tag.setPreviousTagSize(injectedTag.getBodySize());
  writer.writeHeader();
  writer.writeTag(injectedTag);
  writer.writeTag(tag);
  int cuePointTimeStamp=0;
  int counter=0;
  if (metaArr != null) {
    Arrays.sort(metaArr);
    cuePointTimeStamp=getTimeInMilliseconds(metaArr[0]);
  }
  while (reader.hasMoreTags()) {
    tag=reader.readTag();
    if (counter < metaArr.length) {
      while (tag.getTimestamp() > cuePointTimeStamp) {
        injectedTag=injectMetaCue(metaArr[counter],tag);
        writer.writeTag(injectedTag);
        tag.setPreviousTagSize(injectedTag.getBodySize());
        counter++;
        if (counter > (metaArr.length - 1)) {
          break;
        }
        cuePointTimeStamp=getTimeInMilliseconds(metaArr[counter]);
      }
    }
    if (tag.getDataType() != IoConstants.TYPE_METADATA) {
      writer.writeTag(tag);
    }
  }
  writer.close();
}
