{
  if (startIndex < 0 || startIndex > s.length()) {
    return s;
  }
  int index=s.indexOf("/**",startIndex);
  StringBuilder sb=new StringBuilder(s);
  while (index < sb.length()) {
    char c=sb.charAt(index);
    String ss=sb.substring(index + 1);
    if (c == '`' && ss.startsWith("``") && sb.length() - index > 3) {
      sb.replace(index,index + 3,"<pre>{@code" + (Character.isWhitespace(sb.charAt(index + 3)) ? "" : " "));
      index=sb.indexOf("```",index);
      if (index < 0) {
        break;
      }
      sb.replace(index,index + 3,"}</pre>");
    }
 else     if (c == '`') {
      sb.replace(index,index + 1,"{@code ");
      index=sb.indexOf("`",index);
      if (index < 0) {
        break;
      }
      sb.replace(index,index + 1,"}");
    }
 else     if ((c == '\\' || c == '@') && ss.startsWith("code")) {
      sb.replace(index,index + 5,"<pre>{@code" + (Character.isWhitespace(sb.charAt(index + 5)) ? "" : " "));
      index=sb.indexOf(c + "endcode",index);
      if (index < 0) {
        break;
      }
      sb.replace(index,index + 8,"}</pre>");
    }
 else     if ((c == '\\' || c == '@') && ss.startsWith("verbatim")) {
      sb.replace(index,index + 9,"<pre>{@literal" + (Character.isWhitespace(sb.charAt(index + 9)) ? "" : " "));
      index=sb.indexOf(c + "endverbatim",index);
      if (index < 0) {
        break;
      }
      sb.replace(index,index + 12,"}</pre>");
    }
 else     if (c == '\n' && ss.length() > 0 && ss.charAt(0) == '\n') {
      int n=0;
      while (n < ss.length() && ss.charAt(n) == '\n') {
        n++;
      }
      String indent="";
      while (n < ss.length() && Character.isWhitespace(ss.charAt(n))) {
        indent+=ss.charAt(n);
        n++;
      }
      sb.insert(index + 1,indent + "<p>");
    }
 else     if (c == '\\' || c == '@') {
      String foundTag=null;
      for (      String tag : docTags) {
        if (ss.startsWith(tag)) {
          foundTag=tag;
          break;
        }
      }
      if (foundTag != null) {
        sb.setCharAt(index,'@');
        int n=index + foundTag.length() + 1;
        if (sb.charAt(n) == 's' && !foundTag.endsWith("s")) {
          sb.deleteCharAt(n);
        }
 else         if (!Character.isWhitespace(sb.charAt(n))) {
          sb.insert(n,' ');
        }
      }
 else {
        sb.setCharAt(index,'\\');
      }
    }
 else     if (c == '*' && ss.charAt(0) == '/') {
      index=sb.indexOf("/**",index);
      if (index < 0) {
        break;
      }
    }
    index++;
  }
  return sb.toString();
}
