{
  log.warn("Got here");
  MultipartHttpServletRequest multipartRequest=(MultipartHttpServletRequest)request;
  MultipartFile multipartFile=multipartRequest.getFile("upload");
  byte[] file=multipartFile.getBytes();
  InputStream imageData=new ByteArrayInputStream(file);
  BufferedImage image=ImageIO.read(imageData);
  log.warn("Received image size {}",file.length);
  String room=request.getParameterValues("room")[0];
  log.warn("Received image from room {}",room);
  String videoInfo=request.getParameterValues("videoInfo")[0];
  log.warn("Received image from videoInfo {}",videoInfo);
  String[] screenDimensions=videoInfo.split("x");
  int width=Integer.parseInt(screenDimensions[0]);
  int height=Integer.parseInt(screenDimensions[1]);
  int frameRate=Integer.parseInt(screenDimensions[2]);
  Boolean startCapture=Boolean.valueOf(request.getParameter("startCapture"));
  log.warn("Received startCapture {}",startCapture);
  if (!hasGateway) {
    streamerGateway=getStreamerGateway();
    hasGateway=true;
  }
  CapturedScreen cs=new CapturedScreen();
  cs.setRoom(room);
  cs.setWidth(width);
  cs.setHeight(height);
  cs.setFrameRate(frameRate);
  cs.setScreen(image);
  if (startCapture) {
    sendCaptureStartEvent(cs);
  }
 else {
    sendCaptureEvent(cs);
  }
  return null;
}
