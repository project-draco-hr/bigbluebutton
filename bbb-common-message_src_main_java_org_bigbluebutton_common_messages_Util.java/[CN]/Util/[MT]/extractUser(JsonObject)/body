{
  if (user.has(Constants.USER_ID) && user.has(Constants.NAME) && user.has(Constants.HAS_STREAM)&& user.has(Constants.LISTENONLY)&& user.has(Constants.EMOJI_STATUS)&& user.has(Constants.PHONE_USER)&& user.has(Constants.PRESENTER)&& user.has(Constants.LOCKED)&& user.has(Constants.EXTERN_USERID)&& user.has(Constants.ROLE)&& user.has(Constants.VOICEUSER)&& user.has(Constants.WEBCAM_STREAM)) {
    Map<String,Object> userMap=new HashMap<String,Object>();
    String userid=user.get(Constants.USER_ID).getAsString();
    String username=user.get(Constants.NAME).getAsString();
    Boolean hasStream=user.get(Constants.HAS_STREAM).getAsBoolean();
    Boolean listenOnly=user.get(Constants.LISTENONLY).getAsBoolean();
    String emojiStatus=user.get(Constants.EMOJI_STATUS).getAsString();
    Boolean phoneUser=user.get(Constants.PHONE_USER).getAsBoolean();
    Boolean presenter=user.get(Constants.PRESENTER).getAsBoolean();
    Boolean locked=user.get(Constants.LOCKED).getAsBoolean();
    String extUserId=user.get(Constants.EXTERN_USERID).getAsString();
    String role=user.get(Constants.ROLE).getAsString();
    JsonArray webcamStreamJArray=user.get(Constants.WEBCAM_STREAM).getAsJsonArray();
    ArrayList<String> webcamStreams=extractWebcamStreams(webcamStreamJArray);
    userMap.put("userId",userid);
    userMap.put("name",username);
    userMap.put("listenOnly",listenOnly);
    userMap.put("hasStream",hasStream);
    userMap.put("webcamStream",webcamStreams);
    userMap.put("emojiStatus",emojiStatus);
    userMap.put("externUserID",extUserId);
    userMap.put("phoneUser",phoneUser);
    userMap.put("locked",locked);
    userMap.put("role",role);
    userMap.put("presenter",presenter);
    JsonObject vu=(JsonObject)user.get(Constants.VOICEUSER);
    Map<String,Object> vuMap=extractVoiceUser(vu);
    if (vuMap != null) {
      userMap.put("voiceUser",vuMap);
      return userMap;
    }
  }
  return null;
}
