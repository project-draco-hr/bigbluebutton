{
  if (!(event instanceof IRTMPEvent) && (event.getType() != IEvent.Type.STREAM_CONTROL) && (event.getType() != IEvent.Type.STREAM_DATA) || closed) {
    if (log.isDebugEnabled()) {
      log.debug("dispatchEvent: " + event.getType());
    }
    return;
  }
  IStreamCodecInfo codecInfo=getCodecInfo();
  StreamCodecInfo info=null;
  if (codecInfo instanceof StreamCodecInfo) {
    info=(StreamCodecInfo)codecInfo;
  }
  IRTMPEvent rtmpEvent;
  try {
    rtmpEvent=(IRTMPEvent)event;
  }
 catch (  ClassCastException e) {
    log.error("Class cast exception in event dispatch",e);
    return;
  }
  int eventTime=-1;
  if (firstPacketTime == -1) {
    firstPacketTime=rtmpEvent.getTimestamp();
  }
  if (rtmpEvent instanceof AudioData) {
    if (info != null) {
      info.setHasAudio(true);
    }
    if (rtmpEvent.getHeader().isTimerRelative()) {
      audioTime+=rtmpEvent.getTimestamp();
    }
 else {
      audioTime=rtmpEvent.getTimestamp();
    }
    eventTime=audioTime;
  }
 else   if (rtmpEvent instanceof VideoData) {
    IVideoStreamCodec videoStreamCodec=null;
    if (videoCodecFactory != null && checkVideoCodec) {
      videoStreamCodec=videoCodecFactory.getVideoCodec(((VideoData)rtmpEvent).getData());
      if (codecInfo instanceof StreamCodecInfo) {
        ((StreamCodecInfo)codecInfo).setVideoCodec(videoStreamCodec);
      }
      checkVideoCodec=false;
    }
 else     if (codecInfo != null) {
      videoStreamCodec=codecInfo.getVideoCodec();
    }
    if (videoStreamCodec != null) {
      videoStreamCodec.addData(((VideoData)rtmpEvent).getData());
    }
    if (info != null) {
      info.setHasVideo(true);
    }
    if (rtmpEvent.getHeader().isTimerRelative()) {
      videoTime+=rtmpEvent.getTimestamp();
    }
 else {
      videoTime=rtmpEvent.getTimestamp();
    }
    eventTime=videoTime;
  }
 else   if (rtmpEvent instanceof Invoke) {
    if (rtmpEvent.getHeader().isTimerRelative()) {
      dataTime+=rtmpEvent.getTimestamp();
    }
 else {
      dataTime=rtmpEvent.getTimestamp();
    }
    return;
  }
 else   if (rtmpEvent instanceof Notify) {
    if (rtmpEvent.getHeader().isTimerRelative()) {
      dataTime+=rtmpEvent.getTimestamp();
    }
 else {
      dataTime=rtmpEvent.getTimestamp();
    }
    eventTime=dataTime;
  }
  if (rtmpEvent instanceof IStreamData && ((IStreamData)rtmpEvent).getData() != null) {
    bytesReceived+=((IStreamData)rtmpEvent).getData().limit();
  }
  checkSendNotifications(event);
  RTMPMessage msg=new RTMPMessage();
  msg.setBody(rtmpEvent);
  msg.getBody().setTimestamp(eventTime);
  try {
    if (livePipe != null) {
      livePipe.pushMessage(msg);
    }
    recordPipe.pushMessage(msg);
  }
 catch (  IOException err) {
    sendRecordFailedNotify(err.getMessage());
    stop();
  }
  if (rtmpEvent instanceof IStreamPacket) {
    for (    IStreamListener listener : getStreamListeners()) {
      try {
        listener.packetReceived(this,(IStreamPacket)rtmpEvent);
      }
 catch (      Exception e) {
        log.error("Error while notifying listener " + listener,e);
      }
    }
  }
}
