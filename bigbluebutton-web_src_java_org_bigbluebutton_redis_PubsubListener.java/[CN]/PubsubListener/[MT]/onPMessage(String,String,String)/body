{
  System.out.println("redis message received. pattern:" + pattern + " channel:"+ channel+ " message:"+ message);
  if (pattern.equalsIgnoreCase(PATTERN_CONFERENCE)) {
    String[] args=message.split(COLON);
    if (channel.equalsIgnoreCase(CHANNEL_STATUS)) {
      String roomname=args[0];
      String status=args[1];
      if (status.equalsIgnoreCase("started")) {
        dynamicConferenceService.conferenceStarted2(roomname);
      }
 else       if (status.equalsIgnoreCase("ended")) {
        dynamicConferenceService.conferenceEnded2(roomname);
      }
    }
 else     if (channel.equalsIgnoreCase(CHANNEL_JOIN)) {
      String roomname=args[0];
      String userid=args[1];
      String fullname=args[2];
      String role=args[3];
      dynamicConferenceService.participantsUpdatedJoin(roomname,userid,fullname,role);
    }
 else     if (channel.equalsIgnoreCase(CHANNEL_LEAVE)) {
      String roomname=args[0];
      String userid=args[1];
      dynamicConferenceService.participantsUpdatedRemove(roomname,userid);
    }
  }
}
