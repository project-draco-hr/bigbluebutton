{
  assertEquals("Hans Wurst",AstUtil.parseCallerId("\"Hans Wurst\"<1234>")[0]);
  assertEquals("Hans Wurst",AstUtil.parseCallerId("\"Hans Wurst\" <1234>")[0]);
  assertEquals("Hans Wurst",AstUtil.parseCallerId("\" Hans Wurst \" <1234>")[0]);
  assertEquals("Hans Wurst",AstUtil.parseCallerId("  \"Hans Wurst  \"   <1234>  ")[0]);
  assertEquals("Hans Wurst",AstUtil.parseCallerId("  \"  Hans Wurst  \"   <1234>  ")[0]);
  assertEquals("Hans Wurst",AstUtil.parseCallerId("Hans Wurst <1234>")[0]);
  assertEquals("Hans Wurst",AstUtil.parseCallerId(" Hans Wurst  <1234>  ")[0]);
  assertEquals("Hans <Wurst>",AstUtil.parseCallerId("\"Hans <Wurst>\" <1234>")[0]);
  assertEquals("Hans Wurst",AstUtil.parseCallerId("Hans Wurst")[0]);
  assertEquals("Hans Wurst",AstUtil.parseCallerId(" Hans Wurst ")[0]);
  assertEquals(null,AstUtil.parseCallerId("<1234>")[0]);
  assertEquals(null,AstUtil.parseCallerId(" <1234> ")[0]);
  assertEquals("<1234",AstUtil.parseCallerId(" <1234 ")[0]);
  assertEquals("1234>",AstUtil.parseCallerId(" 1234> ")[0]);
  assertEquals(null,AstUtil.parseCallerId(null)[0]);
  assertEquals(null,AstUtil.parseCallerId("")[0]);
  assertEquals(null,AstUtil.parseCallerId(" ")[0]);
}
