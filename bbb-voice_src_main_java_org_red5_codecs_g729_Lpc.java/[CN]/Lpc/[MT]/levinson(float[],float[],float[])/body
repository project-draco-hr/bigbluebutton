{
  float s, at, err;
  int i, j, l;
  rc[0]=(-r[1]) / r[0];
  a[0]=(float)1.0;
  a[1]=rc[0];
  err=r[0] + r[1] * rc[0];
  for (i=2; i <= LD8KConstants.M; i++) {
    s=(float)0.0;
    for (j=0; j < i; j++)     s+=r[i - j] * a[j];
    rc[i - 1]=(-s) / (err);
    for (j=1; j <= (i / 2); j++) {
      l=i - j;
      at=a[j] + rc[i - 1] * a[l];
      a[l]+=rc[i - 1] * a[j];
      a[j]=at;
    }
    a[i]=rc[i - 1];
    err+=rc[i - 1] * s;
    if (err <= (float)0.0)     err=(float)0.001;
  }
  return (err);
}
