{
  Map<String,Method> getters=ReflectionUtil.getGetters(action.getClass());
  for (  Map.Entry<String,Method> entry : getters.entrySet()) {
    final String name=entry.getKey();
    final Method getter=entry.getValue();
    final Object value;
    if (membersToIgnore.contains(name)) {
      continue;
    }
    try {
      value=getter.invoke(action);
    }
 catch (    Exception ex) {
      logger.error("Unable to retrieve property '" + name + "' of "+ action.getClass(),ex);
      continue;
    }
    if (value == null || value instanceof Class) {
      continue;
    }
    final String mappedName=mapToAsterisk(getter);
    if (value instanceof Map) {
      appendMap(sb,mappedName,(Map)value);
    }
 else     if (value instanceof String) {
      appendString(sb,mappedName,(String)value);
    }
 else {
      appendString(sb,mappedName,value.toString());
    }
  }
}
