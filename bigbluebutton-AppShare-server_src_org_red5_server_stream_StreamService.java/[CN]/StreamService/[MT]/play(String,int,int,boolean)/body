{
  IConnection conn=Red5.getConnectionLocal();
  if (!(conn instanceof IStreamCapableConnection)) {
    return;
  }
  IScope scope=conn.getScope();
  IStreamCapableConnection streamConn=(IStreamCapableConnection)conn;
  int streamId=getCurrentStreamId();
  if (name == null || "".equals(name)) {
    sendNSFailed((RTMPConnection)streamConn,"The stream name may not be empty.",name,streamId);
    return;
  }
  IStreamSecurityService security=(IStreamSecurityService)ScopeUtils.getScopeService(scope,IStreamSecurityService.class);
  if (security != null) {
    Set<IStreamPlaybackSecurity> handlers=security.getStreamPlaybackSecurity();
    for (    IStreamPlaybackSecurity handler : handlers) {
      if (!handler.isPlaybackAllowed(scope,name,start,length,flushPlaylist)) {
        sendNSFailed((RTMPConnection)streamConn,"You are not allowed to play the stream.",name,streamId);
        return;
      }
    }
  }
  IClientStream stream=streamConn.getStreamById(streamId);
  boolean created=false;
  if (stream == null) {
    stream=streamConn.newPlaylistSubscriberStream(streamId);
    stream.start();
    created=true;
  }
  if (!(stream instanceof ISubscriberStream)) {
    return;
  }
  ISubscriberStream subscriberStream=(ISubscriberStream)stream;
  SimplePlayItem item=new SimplePlayItem();
  item.setName(name);
  item.setStart(start);
  item.setLength(length);
  if (subscriberStream instanceof IPlaylistSubscriberStream) {
    IPlaylistSubscriberStream playlistStream=(IPlaylistSubscriberStream)subscriberStream;
    if (flushPlaylist) {
      playlistStream.removeAllItems();
    }
    playlistStream.addItem(item);
  }
 else   if (subscriberStream instanceof ISingleItemSubscriberStream) {
    ISingleItemSubscriberStream singleStream=(ISingleItemSubscriberStream)subscriberStream;
    singleStream.setPlayItem(item);
  }
 else {
    return;
  }
  try {
    subscriberStream.play();
  }
 catch (  IOException err) {
    if (created) {
      stream.close();
      streamConn.deleteStreamById(streamId);
    }
    sendNSFailed((RTMPConnection)streamConn,err.getMessage(),name,streamId);
  }
}
