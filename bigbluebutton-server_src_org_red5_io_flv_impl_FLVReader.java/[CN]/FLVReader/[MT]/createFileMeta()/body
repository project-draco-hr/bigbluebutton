{
  ByteBuffer buf=ByteBuffer.allocate(1024);
  buf.setAutoExpand(true);
  Output out=new Output(buf);
  out.writeString("onMetaData");
  Map<Object,Object> props=new HashMap<Object,Object>();
  props.put("duration",duration / 1000.0);
  if (firstVideoTag != -1) {
    long old=getCurrentPosition();
    setCurrentPosition(firstVideoTag);
    readTagHeader();
    fillBuffer(1);
    byte frametype=in.get();
    props.put("videocodecid",frametype & MASK_VIDEO_CODEC);
    setCurrentPosition(old);
  }
  if (firstAudioTag != -1) {
    long old=getCurrentPosition();
    setCurrentPosition(firstAudioTag);
    readTagHeader();
    fillBuffer(1);
    byte frametype=in.get();
    props.put("audiocodecid",(frametype & MASK_SOUND_FORMAT) >> 4);
    setCurrentPosition(old);
  }
  props.put("canSeekToEnd",true);
  out.writeMap(props,new Serializer());
  buf.flip();
  ITag result=new Tag(IoConstants.TYPE_METADATA,0,buf.limit(),null,0);
  result.setBody(buf);
  return result;
}
