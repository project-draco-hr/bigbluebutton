{
  File oldFile=new File(oldJarPath);
  File diffFile=new File(jarDiffPath);
  JarOutputStream jos=new JarOutputStream(result);
  JarFile oldJar=new JarFile(oldFile);
  JarFile jarDiff=new JarFile(diffFile);
  Set ignoreSet=new HashSet();
  Map renameMap=new HashMap();
  determineNameMapping(jarDiff,ignoreSet,renameMap);
  Object[] keys=renameMap.keySet().toArray();
  Set oldjarNames=new HashSet();
  Enumeration oldEntries=oldJar.entries();
  if (oldEntries != null) {
    while (oldEntries.hasMoreElements()) {
      oldjarNames.add(((JarEntry)oldEntries.nextElement()).getName());
    }
  }
  double size=oldjarNames.size() + keys.length + jarDiff.size();
  double currentEntry=0;
  oldjarNames.removeAll(ignoreSet);
  size-=ignoreSet.size();
  Enumeration entries=jarDiff.entries();
  if (entries != null) {
    while (entries.hasMoreElements()) {
      JarEntry entry=(JarEntry)entries.nextElement();
      if (!INDEX_NAME.equals(entry.getName())) {
        updateDelegate(delegate,currentEntry,size);
        currentEntry++;
        writeEntry(jos,entry,jarDiff);
        boolean wasInOld=oldjarNames.remove(entry.getName());
        if (wasInOld)         size--;
      }
 else {
        size--;
      }
    }
  }
  for (int j=0; j < keys.length; j++) {
    String newName=(String)keys[j];
    String oldName=(String)renameMap.get(newName);
    JarEntry oldEntry=oldJar.getJarEntry(oldName);
    if (oldEntry == null) {
      String moveCmd=MOVE_COMMAND + oldName + " "+ newName;
      handleException("jardiff.error.badmove",moveCmd);
    }
    JarEntry newEntry=new JarEntry(newName);
    newEntry.setTime(oldEntry.getTime());
    newEntry.setSize(oldEntry.getSize());
    newEntry.setCompressedSize(oldEntry.getCompressedSize());
    newEntry.setCrc(oldEntry.getCrc());
    newEntry.setMethod(oldEntry.getMethod());
    newEntry.setExtra(oldEntry.getExtra());
    newEntry.setComment(oldEntry.getComment());
    updateDelegate(delegate,currentEntry,size);
    currentEntry++;
    writeEntry(jos,newEntry,oldJar.getInputStream(oldEntry));
    boolean wasInOld=oldjarNames.remove(oldName);
    if (wasInOld)     size--;
  }
  Iterator iEntries=oldjarNames.iterator();
  if (iEntries != null) {
    while (iEntries.hasNext()) {
      String name=(String)iEntries.next();
      JarEntry entry=oldJar.getJarEntry(name);
      updateDelegate(delegate,currentEntry,size);
      currentEntry++;
      writeEntry(jos,entry,oldJar);
    }
  }
  updateDelegate(delegate,currentEntry,size);
  jos.finish();
}
