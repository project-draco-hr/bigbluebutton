{
  this.transcoder=transcoder;
  this.rtpSender=rtpSender;
  talkStreamName="microphone_" + System.currentTimeMillis();
  mInputListener=new IStreamListener(){
    public void packetReceived(    IBroadcastStream broadcastStream,    IStreamPacket packet){
      IoBuffer buf=packet.getData();
      if (buf != null)       buf.rewind();
      if (buf == null || buf.remaining() == 0) {
        log.debug("skipping empty packet with no data");
        System.out.println("skipping empty packet with no data");
        return;
      }
      if (packet instanceof AudioData) {
        try {
          byte[] data=SerializeUtils.ByteBufferToByteArray(buf);
          RtmpAudioData audioData=new RtmpAudioData(data);
          System.out.println("Adding data " + data.length);
          packets.put(audioData);
        }
 catch (        InterruptedException e) {
          log.info("Interrupted exception while queieing audio packet");
        }
      }
    }
  }
;
}
