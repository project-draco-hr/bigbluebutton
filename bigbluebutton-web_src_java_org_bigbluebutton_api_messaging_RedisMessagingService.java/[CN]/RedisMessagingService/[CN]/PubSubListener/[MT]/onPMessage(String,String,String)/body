{
  log.debug("Message Received in channel: " + channel);
  Gson gson=new Gson();
  HashMap<String,String> map=gson.fromJson(message,new TypeToken<Map<String,String>>(){
  }
.getType());
  for (  String key : map.keySet()) {
    log.debug("rx: {} = {}",key,map.get(key));
  }
  if (channel.equalsIgnoreCase(MessagingConstants.SYSTEM_CHANNEL)) {
    String meetingId=map.get("meetingId");
    String messageId=map.get("messageId");
    log.debug("*** Meeting {} Message {}",meetingId,messageId);
    for (    MessageListener listener : listeners) {
      if (MessagingConstants.MEETING_STARTED_EVENT.equalsIgnoreCase(messageId)) {
        listener.meetingStarted(meetingId);
      }
 else       if (MessagingConstants.MEETING_ENDED_EVENT.equalsIgnoreCase(messageId)) {
        listener.meetingEnded(meetingId);
      }
    }
  }
 else   if (channel.equalsIgnoreCase(MessagingConstants.PARTICIPANTS_CHANNEL)) {
    String meetingId=map.get("meetingId");
    String messageId=map.get("messageId");
    if (MessagingConstants.USER_JOINED_EVENT.equalsIgnoreCase(messageId)) {
      String internalUserId=map.get("internalUserId");
      String externalUserId=map.get("externalUserId");
      String fullname=map.get("fullname");
      String role=map.get("role");
      for (      MessageListener listener : listeners) {
        listener.userJoined(meetingId,internalUserId,externalUserId,fullname,role);
      }
    }
 else     if (MessagingConstants.USER_STATUS_CHANGE_EVENT.equalsIgnoreCase(messageId)) {
      String internalUserId=map.get("internalUserId");
      String status=map.get("status");
      String value=map.get("value");
      for (      MessageListener listener : listeners) {
        listener.updatedStatus(meetingId,internalUserId,status,value);
      }
    }
 else     if (MessagingConstants.USER_LEFT_EVENT.equalsIgnoreCase(messageId)) {
      String internalUserId=map.get("internalUserId");
      for (      MessageListener listener : listeners) {
        listener.userLeft(meetingId,internalUserId);
      }
    }
 else     if (MessagingConstants.USER_JOINED_VOICE_EVENT.equalsIgnoreCase(messageId)) {
      String externalUserId=map.get("externalUserId");
      for (      MessageListener listener : listeners) {
        listener.userJoinedVoice(meetingId,externalUserId);
      }
    }
 else     if (MessagingConstants.USER_LEFT_VOICE_EVENT.equalsIgnoreCase(messageId)) {
      String externalUserId=map.get("externalUserId");
      for (      MessageListener listener : listeners) {
        listener.userLeftVoice(meetingId,externalUserId);
      }
    }
  }
}
