{
  JsonParser parser=new JsonParser();
  JsonObject obj=(JsonObject)parser.parse(message);
  if (obj.has("header") && obj.has("payload")) {
    JsonObject header=(JsonObject)obj.get("header");
    JsonObject payload=(JsonObject)obj.get("payload");
    if (header.has("name")) {
      String messageName=header.get("name").getAsString();
      if (MEETING_STATE.equals(messageName)) {
        if (payload.has(Constants.MEETING_ID) && payload.has(Constants.USER_ID) && payload.has(Constants.PERMISSIONS)&& payload.has(Constants.MEETING_MUTED)) {
          String meetingID=payload.get(Constants.MEETING_ID).getAsString();
          String userId=payload.get(Constants.USER_ID).getAsString();
          Boolean muted=payload.get(Constants.MEETING_MUTED).getAsBoolean();
          JsonObject premissions=(JsonObject)payload.get(Constants.PERMISSIONS);
          Util util=new Util();
          Map<String,Boolean> premissionsMap=util.extractPermission(premissions);
          if (premissionsMap != null) {
            return new MeetingStateMessage(meetingID,userId,premissionsMap,muted);
          }
        }
      }
    }
  }
  System.out.println("Failed to parse UserJoinedMessage");
  return null;
}
