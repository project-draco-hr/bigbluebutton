{
  log.debug("Message Received in channel: " + channel);
  log.debug("Message: " + message);
  Gson gson=new Gson();
  if (channel.equalsIgnoreCase(MessagingConstants.SYSTEM_CHANNEL)) {
    HashMap<String,String> map=gson.fromJson(message,new TypeToken<Map<String,String>>(){
    }
.getType());
    String messageId=map.get("messageID");
    log.debug("*** Message {}",messageId);
    for (    MessageListener listener : listeners) {
      if (MessagingConstants.MEETING_STARTED_EVENT.equalsIgnoreCase(messageId)) {
        String meetingId=map.get("meetingID");
        listener.meetingStarted(meetingId);
      }
 else       if (MessagingConstants.MEETING_ENDED_EVENT.equalsIgnoreCase(messageId)) {
        String meetingId=map.get("meetingID");
        listener.meetingEnded(meetingId);
      }
 else       if (MessagingConstants.KEEP_ALIVE_REPLY_EVENT.equalsIgnoreCase(messageId)) {
        String aliveId=map.get("aliveID");
        listener.keepAliveReply(aliveId);
      }
    }
  }
 else   if (channel.equalsIgnoreCase(MessagingConstants.PARTICIPANTS_CHANNEL)) {
    HashMap<String,String> map=gson.fromJson(message,new TypeToken<Map<String,String>>(){
    }
.getType());
    String meetingId=map.get("meetingID");
    String messageId=map.get("messageID");
    if (MessagingConstants.USER_JOINED_EVENT.equalsIgnoreCase(messageId)) {
      String internalUserId=map.get("internalUserID");
      String externalUserId=map.get("externalUserID");
      String fullname=map.get("fullname");
      String role=map.get("role");
      for (      MessageListener listener : listeners) {
        listener.userJoined(meetingId,internalUserId,externalUserId,fullname,role);
      }
    }
 else     if (MessagingConstants.USER_STATUS_CHANGE_EVENT.equalsIgnoreCase(messageId)) {
      String internalUserId=map.get("internalUserID");
      String status=map.get("status");
      String value=map.get("value");
      for (      MessageListener listener : listeners) {
        listener.updatedStatus(meetingId,internalUserId,status,value);
      }
    }
 else     if (MessagingConstants.USER_LEFT_EVENT.equalsIgnoreCase(messageId)) {
      String internalUserId=map.get("internalUserID");
      for (      MessageListener listener : listeners) {
        listener.userLeft(meetingId,internalUserId);
      }
    }
  }
}
