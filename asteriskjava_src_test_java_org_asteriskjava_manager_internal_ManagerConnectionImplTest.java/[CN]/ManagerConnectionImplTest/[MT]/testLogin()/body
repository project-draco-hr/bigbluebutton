{
  MockedManagerEventListener listener;
  long startTime;
  long endTime;
  long duration;
  listener=new MockedManagerEventListener();
  replay(mockSocket);
  mc.setUsername("username");
  mc.setPassword("password");
  mc.addEventListener(listener);
  mc.setDefaultResponseTimeout(5000);
  startTime=System.currentTimeMillis();
  mc.login();
  endTime=System.currentTimeMillis();
  duration=endTime - startTime;
  assertEquals("createSocket not called 1 time",1,mc.createSocketCalls);
  assertEquals("createWriter not called 1 time",1,mc.createWriterCalls);
  assertEquals("createReader not called 1 time",1,mc.createReaderCalls);
  assertEquals("challenge action not sent 1 time",1,mockWriter.challengeActionsSent);
  assertEquals("login action not sent 1 time",1,mockWriter.loginActionsSent);
  assertEquals("unexpected other actions sent",0,mockWriter.otherActionsSent);
  assertEquals("setSocket() not called 1 time",1,mockReader.setSocketCalls);
  try {
    Thread.sleep(100);
  }
 catch (  InterruptedException e) {
    Thread.sleep(100);
  }
  assertEquals("run() not called 1 time",1,mockReader.runCalls);
  assertEquals("unexpected call to die()",0,mockReader.dieCalls);
  assertEquals("state is not CONNECTED",ManagerConnectionState.CONNECTED,mc.getState());
  assertEquals("must have handled exactly one events",1,listener.eventsHandled.size());
  assertTrue("event handled must be a ConnectEvent",listener.eventsHandled.get(0) instanceof ConnectEvent);
  verify(mockSocket);
  assertTrue("login() took longer than 2 second, probably a notify error (duration was " + duration + " is msec)",duration <= 2000);
}
