{
  if (args.length <= 0)   throw new IllegalArgumentException("no file");
  String filename=args[0];
  IContainer container=IContainer.make();
  if (container.open(filename,IContainer.Type.READ,null) < 0)   throw new IllegalArgumentException("could not open file");
  int numStreams=container.getNumStreams();
  int audioStreamId=-1;
  IStreamCoder audioCoder=null;
  for (int i=0; i < numStreams; i++) {
    IStream stream=container.getStream(i);
    IStreamCoder coder=stream.getStreamCoder();
    if (coder.getCodecType() == ICodec.Type.CODEC_TYPE_AUDIO) {
      audioStreamId=i;
      audioCoder=coder;
      break;
    }
  }
  if (audioStreamId == -1)   throw new RuntimeException("could not find an audio stream");
  if (audioCoder.open() < 0)   throw new RuntimeException("could not open audio decoder for this stream");
  openJavaSound(audioCoder);
  IPacket packet=IPacket.make();
  while (container.readNextPacket(packet) >= 0) {
    if (packet.getStreamIndex() == audioStreamId) {
      IAudioSamples samples=IAudioSamples.make(1024,audioCoder.getChannels());
      int offset=0;
      while (offset < packet.getSize()) {
        int bytesDecoded=audioCoder.decodeAudio(samples,packet,offset);
        if (bytesDecoded < 0)         throw new RuntimeException("got error while decoding");
        offset+=bytesDecoded;
        if (samples.isComplete()) {
          playJavaSound(samples);
        }
      }
    }
  }
  closeJavaSound();
}
