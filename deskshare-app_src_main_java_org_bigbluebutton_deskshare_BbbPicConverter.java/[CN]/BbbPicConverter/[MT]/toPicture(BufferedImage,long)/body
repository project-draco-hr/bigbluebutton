{
  validateImage(image);
  DataBuffer imageBuffer=image.getRaster().getDataBuffer();
  byte[] imageBytes=null;
  int[] imageInts=null;
  if (imageBuffer instanceof DataBufferByte) {
    imageBytes=((DataBufferByte)imageBuffer).getData();
  }
 else   if (imageBuffer instanceof DataBufferInt) {
    imageInts=((DataBufferInt)imageBuffer).getData();
  }
 else {
    throw new IllegalArgumentException("Unsupported BufferedImage data buffer type: " + imageBuffer.getDataType());
  }
  final AtomicReference<JNIReference> ref=new AtomicReference<JNIReference>(null);
  IVideoPicture resamplePicture=null;
  try {
    IVideoPicture picture=IVideoPicture.make(getRequiredPictureType(),image.getWidth(),image.getHeight());
    ByteBuffer pictureByteBuffer=picture.getByteBuffer(ref);
    if (imageInts != null) {
      pictureByteBuffer.order(ByteOrder.BIG_ENDIAN);
      IntBuffer pictureIntBuffer=pictureByteBuffer.asIntBuffer();
      pictureIntBuffer.put(imageInts);
    }
 else {
      pictureByteBuffer.put(imageBytes);
    }
    pictureByteBuffer=null;
    picture.setComplete(true,getRequiredPictureType(),image.getWidth(),image.getHeight(),timestamp);
    return picture;
  }
  finally {
    if (resamplePicture != null)     resamplePicture.delete();
    if (ref.get() != null)     ref.get().delete();
  }
}
