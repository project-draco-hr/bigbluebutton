{
  validatePicture(picture);
  IVideoPicture resamplePicture=null;
  AtomicReference<JNIReference> ref=new AtomicReference<JNIReference>(null);
  try {
    if (willResample()) {
      resamplePicture=resample(picture,mToImageResampler);
      picture=resamplePicture;
    }
    final int w=picture.getWidth();
    final int h=picture.getHeight();
    final ByteBuffer byteBuf=picture.getByteBuffer(ref);
    final byte[] bytes=new byte[picture.getSize()];
    byteBuf.get(bytes,0,bytes.length);
    final DataBufferByte db=new DataBufferByte(bytes,bytes.length);
    final SampleModel sm=new PixelInterleavedSampleModel(db.getDataType(),w,h,3,3 * w,mBandOffsets);
    final WritableRaster wr=Raster.createWritableRaster(sm,db,null);
    final ColorModel colorModel=new ComponentColorModel(mColorSpace,false,false,ColorModel.OPAQUE,db.getDataType());
    return new BufferedImage(colorModel,wr,false,null);
  }
  finally {
    if (resamplePicture != null)     resamplePicture.delete();
    if (ref.get() != null)     ref.get().delete();
  }
}
