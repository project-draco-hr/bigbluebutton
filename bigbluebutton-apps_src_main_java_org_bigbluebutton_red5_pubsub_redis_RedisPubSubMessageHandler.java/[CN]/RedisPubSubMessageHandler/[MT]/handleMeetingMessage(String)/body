{
  JsonParser parser=new JsonParser();
  JsonObject obj=(JsonObject)parser.parse(message);
  if (obj.has("header") && obj.has("payload")) {
    JsonObject header=(JsonObject)obj.get("header");
    if (header.has("name")) {
      String messageName=header.get("name").getAsString();
switch (messageName) {
case DisconnectUserMessage.DISCONNECT_USER:
        DisconnectUserMessage m=DisconnectUserMessage.fromJson(message);
      if (m != null) {
        processDisconnectUserMessage(m);
      }
    break;
case DisconnectAllUsersMessage.DISCONNECT_All_USERS:
  DisconnectAllUsersMessage daum=DisconnectAllUsersMessage.fromJson(message);
if (daum != null) {
  processDisconnectAllUsersMessage(daum);
}
break;
case MeetingEndedMessage.MEETING_ENDED:
MeetingEndedMessage mem=MeetingEndedMessage.fromJson(message);
if (mem != null) {
processMeetingEndedMessage(mem);
}
break;
case MeetingHasEndedMessage.MEETING_HAS_ENDED:
MeetingHasEndedMessage mhem=MeetingHasEndedMessage.fromJson(message);
if (mhem != null) {
processMeetingHasEndedMessage(mhem);
}
break;
}
}
}
}
