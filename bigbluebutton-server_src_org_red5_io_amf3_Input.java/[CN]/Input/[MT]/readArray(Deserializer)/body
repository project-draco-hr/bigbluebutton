{
  int count=readAMF3Integer();
  if ((count & 1) == 0) {
    return getReference(count >> 1);
  }
  count=(count >> 1);
  String key=readString();
  amf3_mode+=1;
  Object result;
  if (key.equals("")) {
    List<Object> resultList=new ArrayList<Object>(count);
    storeReference(resultList);
    for (int i=0; i < count; i++) {
      final Object value=deserializer.deserialize(this,Object.class);
      resultList.add(value);
    }
    result=resultList;
  }
 else {
    Map<Object,Object> resultMap=new HashMap<Object,Object>();
    storeReference(resultMap);
    while (!key.equals("")) {
      final Object value=deserializer.deserialize(this,Object.class);
      resultMap.put(key,value);
      key=readString();
    }
    for (int i=0; i < count; i++) {
      final Object value=deserializer.deserialize(this,Object.class);
      resultMap.put(i,value);
    }
    result=resultMap;
  }
  amf3_mode-=1;
  return result;
}
