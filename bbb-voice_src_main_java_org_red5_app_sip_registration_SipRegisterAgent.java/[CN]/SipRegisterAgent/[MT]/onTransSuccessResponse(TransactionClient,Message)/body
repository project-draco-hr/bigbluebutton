{
  if (transaction.getTransactionMethod().equals(SipMethods.REGISTER)) {
    if (resp.hasAuthenticationInfoHeader()) {
      nextNonce=resp.getAuthenticationInfoHeader().getNextnonceParam();
    }
    StatusLine status=resp.getStatusLine();
    String result=status.getCode() + " " + status.getReason();
    int expires=0;
    if (resp.hasExpiresHeader()) {
      expires=resp.getExpiresHeader().getDeltaSeconds();
    }
 else     if (resp.hasContactHeader()) {
      Vector contacts=resp.getContacts().getHeaders();
      for (int i=0; i < contacts.size(); i++) {
        int exp_i=(new ContactHeader((Header)contacts.elementAt(i))).getExpires();
        if (exp_i / 2 > expires)         expires=exp_i / 2;
      }
    }
    if (expires > 0 && expires < renewTime) {
      renewTime=expires;
      if (renewTime < minRenewTime) {
        printLog("Attempt to set renew time below min renew. Attempted=" + renewTime + " min="+ minRenewTime+ "\r\nResponse="+ resp.toString());
        renewTime=minRenewTime;
      }
    }
 else     if (expires > origRenewTime) {
      printLog("Attempt to set renew time above original renew. Attempted=" + expires + " origrenew="+ origRenewTime+ "\r\nResponse="+ resp.toString());
    }
    printLog("Registration success: " + result);
    regInprocess=false;
    if (request == Request.REGISTERING) {
      printLog("Notifying listeners of REGISTRATION success");
      agentStatus=Status.REGISTERED;
      notifyListenersOfRegistrationSuccess("REGISTERED");
    }
 else     if (request == Request.UNREGISTERING) {
      printLog("Notifying listeners of UNREGISTRATION success");
      agentStatus=Status.UNREGISTERED;
      notifyListenersOfRegistrationSuccess("UNREGISTERED");
    }
 else     if (request == Request.RENEWING) {
      agentStatus=Status.REGISTERED;
      printLog("NOT Notifying listeners of RENEW success");
    }
  }
}
