{
  String action=event.getEventHeaders().get("Action");
  System.out.println("#### conferenceEventRecord " + action);
  if (action == null) {
    if (debug) {
      Map<String,String> eventHeaders=event.getEventHeaders();
      StringBuilder sb=new StringBuilder("\n");
      for (Iterator it=eventHeaders.entrySet().iterator(); it.hasNext(); ) {
        Map.Entry entry=(Map.Entry)it.next();
        sb.append(entry.getKey());
        sb.append(" => '");
        sb.append(entry.getValue());
        sb.append("'\n");
      }
      log.debug("NULL Conference Action [{}] Headers:\n{}\nEND",confName,sb.toString());
    }
    return;
  }
  try {
switch (ESL_EVENT_ACTIONS_MAP.get(action)) {
case ESL_ACTION_START_RECORDING:
      StartRecordingEvent sre=new StartRecordingEvent(123,confName,true);
    sre.setRecordingFilename(getRecordFilenameFromEvent(event));
  sre.setTimestamp(getRecordTimestampFromEvent(event));
System.out.println("#### processing conferenceEventRecord " + action + " time: "+ sre.getTimestamp()+ " file: "+ sre.getRecordingFilename());
conferenceEventListener.handleConferenceEvent(sre);
break;
case ESL_ACTION_STOP_RECORDING:
StartRecordingEvent srev=new StartRecordingEvent(123,confName,false);
srev.setRecordingFilename(getRecordFilenameFromEvent(event));
srev.setTimestamp(getRecordTimestampFromEvent(event));
System.out.println("#### processing conferenceEventRecord " + action + " time: "+ srev.getTimestamp()+ " file: "+ srev.getRecordingFilename());
conferenceEventListener.handleConferenceEvent(srev);
break;
default :
log.debug("Unknown conference Action [{}]",action);
System.out.println("#### processing conferenceEventRecord Unknown conference Action " + action);
}
}
 catch (NullPointerException npe) {
log.debug("Unknown NPE conference Action [{}]",action);
}
}
