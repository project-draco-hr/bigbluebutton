{
  Integer memberId=this.getMemberIdFromEvent(event);
  ParticipantTalkingEvent pt;
  if (action == null) {
    if (debug) {
      Map<String,String> eventHeaders=event.getEventHeaders();
      StringBuilder sb=new StringBuilder("\n");
      for (Iterator it=eventHeaders.entrySet().iterator(); it.hasNext(); ) {
        Map.Entry entry=(Map.Entry)it.next();
        sb.append(entry.getKey());
        sb.append(" => '");
        sb.append(entry.getValue());
        sb.append("'\n");
      }
      log.debug("NULL Conference Action [{}] Headers:\n{}\nEND",confName,sb.toString());
    }
    return;
  }
  try {
switch (ESL_EVENT_ACTIONS_MAP.get(action)) {
case ESL_ACTION_START_TALKING:
      pt=new ParticipantTalkingEvent(memberId,confName,true);
    conferenceEventListener.handleConferenceEvent(pt);
  break;
case ESL_ACTION_STOP_TALKING:
pt=new ParticipantTalkingEvent(memberId,confName,false);
conferenceEventListener.handleConferenceEvent(pt);
break;
default :
log.debug("Unknown conference Action [{}]",action);
}
}
 catch (NullPointerException npe) {
log.debug("Unknown NPE conference Action [{}]",action);
}
}
