{
  int maxNumber=buf.getInt();
  log.debug("Read start mixed array: {}",maxNumber);
  Object result;
  final Map<Object,Object> mixedResult=new LinkedHashMap<Object,Object>(maxNumber);
  while (hasMoreProperties()) {
    String key=getString(buf);
    log.debug("key: {}",key);
    Object item=deserializer.deserialize(this,Object.class);
    log.debug("item: {}",item);
    mixedResult.put(key,item);
  }
  Object length=mixedResult.get("length");
  if (mixedResult.size() <= maxNumber + 1 && length instanceof Integer && maxNumber == (Integer)length) {
    log.debug("mixed array is a regular array");
    final List<Object> listResult=new ArrayList<Object>(maxNumber);
    for (int i=0; i < maxNumber; i++) {
      listResult.add(i,mixedResult.get(String.valueOf(i)));
    }
    result=listResult;
  }
 else {
    mixedResult.remove("length");
    for (int i=0; i < maxNumber; i++) {
      final Object value=mixedResult.remove(String.valueOf(i));
      mixedResult.put(i,value);
    }
    result=mixedResult;
  }
  storeReference(result);
  skipEndObject();
  return result;
}
