{
  writeAMF3();
  buf.put(AMF3.TYPE_ARRAY);
  if (hasReference(map)) {
    putInteger(getReferenceId(map) << 1);
    return;
  }
  storeReference(map);
  int count=0;
  for (int i=0; i < map.size(); i++) {
    try {
      if (!map.containsKey(i))       break;
    }
 catch (    ClassCastException err) {
      break;
    }
    count++;
  }
  amf3_mode+=1;
  if (count == map.size()) {
    putInteger(count << 1 | 1);
    putString("");
    for (int i=0; i < count; i++) {
      serializer.serialize(this,map.get(i));
    }
    amf3_mode-=1;
    return;
  }
  putInteger(count << 1 | 1);
  for (  Map.Entry<Object,Object> entry : map.entrySet()) {
    Object key=entry.getKey();
    if ((key instanceof Number) && !(key instanceof Float) && !(key instanceof Double)&& ((Number)key).longValue() >= 0 && ((Number)key).longValue() < count) {
      continue;
    }
    putString(key.toString());
    serializer.serialize(this,entry.getValue());
  }
  putString("");
  for (int i=0; i < count; i++) {
    serializer.serialize(this,map.get(i));
  }
  amf3_mode-=1;
}
