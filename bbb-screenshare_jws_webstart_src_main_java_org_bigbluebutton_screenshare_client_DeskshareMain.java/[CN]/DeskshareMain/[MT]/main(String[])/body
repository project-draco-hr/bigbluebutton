{
  DeskshareMain dsMain=new DeskshareMain();
  CmdLineParser parser=new CmdLineParser();
  CmdLineParser.Option host=dsMain.addHelp(parser.addStringOption('s',"server"),serverHelpText);
  CmdLineParser.Option port=dsMain.addHelp(parser.addIntegerOption('p',"port"),"The port the application is listening");
  CmdLineParser.Option listenPort=dsMain.addHelp(parser.addIntegerOption('l',"listenPort"),"Port to listen for lifeline");
  CmdLineParser.Option room=dsMain.addHelp(parser.addStringOption('r',"room"),"Room");
  CmdLineParser.Option cWidth=dsMain.addHelp(parser.addIntegerOption('w',"captureWidth"),"Width of the screen capture");
  CmdLineParser.Option cHeight=dsMain.addHelp(parser.addIntegerOption('t',"captureHeight"),"Height of the screen capture");
  CmdLineParser.Option sWidth=dsMain.addHelp(parser.addIntegerOption('d',"scaleWidth"),"Scale capture width");
  CmdLineParser.Option sHeight=dsMain.addHelp(parser.addIntegerOption('g',"scaleHeight"),"Scale capture height");
  CmdLineParser.Option xCoord=dsMain.addHelp(parser.addIntegerOption('x',"x"),"Upper-left x coordinate of the screen capture");
  CmdLineParser.Option yCoord=dsMain.addHelp(parser.addIntegerOption('y',"y"),"Upper-left y coordinate of the screen capture");
  CmdLineParser.Option tryHttpTunnel=dsMain.addHelp(parser.addBooleanOption('n',"httptunnel"),"Http tunnel if direct connection fails");
  CmdLineParser.Option icon=dsMain.addHelp(parser.addStringOption('i',"icon"),"Path to system tray icon file");
  CmdLineParser.Option help=dsMain.addHelp(parser.addBooleanOption('h',"help"),"Show this help message");
  CmdLineParser.Option fullScreen=dsMain.addHelp(parser.addBooleanOption('f',"full-screen"),"Capture the full screen.");
  try {
    parser.parse(args);
  }
 catch (  CmdLineParser.OptionException e) {
    System.err.println(e.getMessage());
    dsMain.printUsage();
    System.exit(2);
  }
  if (Boolean.TRUE.equals(parser.getOptionValue(help))) {
    dsMain.printUsage();
    System.exit(0);
  }
  Integer portValue=(Integer)parser.getOptionValue(port,new Integer(9123));
  Integer listenPortValue=(Integer)parser.getOptionValue(listenPort,new Integer(9125));
  Integer cWidthValue=(Integer)parser.getOptionValue(cWidth,new Integer(801));
  Integer cHeightValue=(Integer)parser.getOptionValue(cHeight,new Integer(601));
  Integer sWidthValue=(Integer)parser.getOptionValue(sWidth,new Integer(800));
  Integer sHeightValue=(Integer)parser.getOptionValue(sHeight,new Integer(600));
  Integer xValue=(Integer)parser.getOptionValue(xCoord,new Integer(0));
  Integer yValue=(Integer)parser.getOptionValue(yCoord,new Integer(0));
  Boolean tunnelValue=(Boolean)parser.getOptionValue(tryHttpTunnel,new Boolean(false));
  String iconValue=(String)parser.getOptionValue(icon,"");
  String url=null;
  String meetingId=null;
  String streamId=null;
  String serverUrl=null;
  Boolean captureFullScreen=false;
  String codecOptions=null;
  if (args != null && args.length == 7) {
    System.out.println("Using passed args: length=[" + args.length + "]");
    url=args[0];
    serverUrl=args[1];
    meetingId=args[2];
    streamId=args[3];
    captureFullScreen=Boolean.parseBoolean(args[4]);
    System.out.println("Using passed args: [" + url + "] meetingId=["+ meetingId+ "] streamId=["+ streamId+ "] captureFullScreen="+ captureFullScreen);
    codecOptions=args[5];
    String errorMessage=args[6];
    if (!errorMessage.equalsIgnoreCase("NO_ERRORS")) {
      dsMain.displayJavaWarning(errorMessage);
    }
 else {
      Image image=null;
      if (iconValue.isEmpty()) {
        try {
          image=ImageIO.read(dsMain.getClass().getResourceAsStream("/images/bbb.gif"));
        }
 catch (        IOException e) {
          e.printStackTrace();
        }
      }
 else {
        image=Toolkit.getDefaultToolkit().getImage("bbb.gif");
      }
      dsMain.displaySystemProperties();
      System.setProperty("org.bytedeco.javacpp.logger.debug","true");
      System.out.println("org.bytedeco.javacpp.logger.debug : " + System.getProperty("org.bytedeco.javacpp.logger.debug"));
      client=new DeskshareClient.NewBuilder().host(serverUrl).port(portValue).meetingId(meetingId).streamId(streamId).captureWidth(cWidthValue).captureHeight(cHeightValue).scaleWidth(sWidthValue).scaleHeight(sHeightValue).quality(true).autoScale(0).codecOptions(codecOptions).x(xValue).y(yValue).fullScreen(captureFullScreen).withURL(url).httpTunnel(tunnelValue).trayIcon(image).enableTrayIconActions(true).build();
      client.addClientListener(dsMain);
      client.start();
      try {
        System.out.println("Waiting for trigger to Stop client.");
        ExitCode reason=dsMain.exitReasonQ.take();
        System.out.println("Stopping Java Web Start.");
        dsMain.displayJavaWarning(reason.name());
        client.stop();
        System.exit(reason.getExitCode());
      }
 catch (      InterruptedException e) {
        e.printStackTrace();
        System.exit(500);
      }
    }
  }
 else {
    System.out.println("Using default args: [" + url + "] width=["+ cWidthValue+ "] height=["+ cHeightValue+ "]");
    System.out.println("args null =[" + (args == null) + "] args.length=["+ args.length+ "]");
    dsMain.displayJavaWarning("Invalid number of arguments.");
  }
}
