{
  MRTMPPacket.Body body=null;
switch (header.getType()) {
case MRTMPPacket.CONNECT:
case MRTMPPacket.CLOSE:
    if (header.getBodyLength() != 0) {
      log.warn("Codec error: wrong connect/close body length " + header.getBodyLength());
    }
  return new MRTMPPacket.Body();
case MRTMPPacket.RTMP:
byte[] byteArray=new byte[header.getBodyLength()];
buffer.get(byteArray);
ObjectInputStream ois=null;
try {
ois=new ObjectInputStream(new ByteArrayInputStream(byteArray));
Packet packet=(Packet)ois.readObject();
body=new MRTMPPacket.RTMPBody();
MRTMPPacket.RTMPBody rtmpBody=(MRTMPPacket.RTMPBody)body;
rtmpBody.setRtmpPacket(packet);
}
 catch (IOException e) {
log.error("",e);
}
catch (ClassNotFoundException e) {
log.error("",e);
}
break;
default :
byteArray=new byte[header.getBodyLength()];
buffer.get(byteArray);
body=new MRTMPPacket.Body();
body.setRawBuf(ByteBuffer.wrap(byteArray));
break;
}
return body;
}
