{
  String action=event.getEventHeaders().get("Action");
  if (action == null) {
    return;
  }
  if (log.isDebugEnabled())   log.debug("Handling conferenceEventRecord " + action);
  if (action.equals(START_RECORDING_EVENT)) {
    StartRecordingEvent sre=new StartRecordingEvent(123,confName,true);
    sre.setRecordingFilename(getRecordFilenameFromEvent(event));
    sre.setTimestamp(getRecordTimestampFromEvent(event));
    if (log.isDebugEnabled())     log.debug("Processing conference event - action: {} time: {} file: {}",new Object[]{action,sre.getTimestamp(),sre.getRecordingFilename()});
    conferenceEventListener.handleConferenceEvent(sre);
  }
 else   if (action.equals(STOP_RECORDING_EVENT)) {
    StartRecordingEvent srev=new StartRecordingEvent(123,confName,false);
    srev.setRecordingFilename(getRecordFilenameFromEvent(event));
    srev.setTimestamp(getRecordTimestampFromEvent(event));
    if (log.isDebugEnabled())     log.debug("Processing conference event - action: {} time: {} file: {}",new Object[]{action,srev.getTimestamp(),srev.getRecordingFilename()});
    conferenceEventListener.handleConferenceEvent(srev);
  }
 else {
    if (log.isDebugEnabled())     log.warn("Processing UNKNOWN conference Action {}",action);
  }
}
