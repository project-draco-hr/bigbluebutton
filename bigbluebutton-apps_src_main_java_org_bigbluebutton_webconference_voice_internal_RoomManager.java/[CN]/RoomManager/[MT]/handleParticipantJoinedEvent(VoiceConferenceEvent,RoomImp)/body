{
  log.debug("Processing ParticipantJoinedEvent for room: " + event.getRoom());
  VoiceUserJoinedEvent pje=(VoiceUserJoinedEvent)event;
  ParticipantImp p=new ParticipantImp(pje.getUserId(),pje.getCallerIdName());
  p.setMuted(pje.getMuted());
  p.setTalking(pje.getSpeaking());
  log.debug("Joined [" + p.getId() + ","+ p.getName()+ ","+ p.isMuted()+ ","+ p.isTalking()+ "] to room "+ rm.getName());
  rm.add(p);
  if (rm.numParticipants() == 1) {
    if (rm.record() && !rm.isRecording()) {
      rm.recording(true);
      log.debug("Starting recording of voice conference");
      log.warn(" ** WARNING: Prototyping only. Works only with FreeSWITCH for now. We need to come up with a generic way to trigger recording for both Asterisk and FreeSWITCH.");
      confService.recordSession(event.getRoom(),rm.getMeeting());
    }
    confService.broadcastSession(event.getRoom(),rm.getMeeting());
  }
  if (rm.isMuted() && !p.isMuted()) {
    confService.mute(p.getId(),event.getRoom(),true);
  }
}
