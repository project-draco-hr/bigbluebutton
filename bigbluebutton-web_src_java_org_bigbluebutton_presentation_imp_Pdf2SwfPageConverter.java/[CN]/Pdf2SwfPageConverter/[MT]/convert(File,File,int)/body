{
  String source=presentation.getAbsolutePath();
  String dest=output.getAbsolutePath();
  String AVM2SWF="-T9";
  NuProcessBuilder pb=new NuProcessBuilder(Arrays.asList("/bin/sh","-c",SWFTOOLS_DIR + File.separator + "pdf2swf"+ " -vv "+ AVM2SWF+ " -F "+ fontsDir+ " -p "+ String.valueOf(page)+ " "+ source+ " -o "+ dest+ " | egrep  'shape id|Updating font|Drawing' | sed 's/  / /g' | cut -d' ' -f 1-3  | sort | uniq -cw 15"));
  Pdf2SwfPageConverterHandler pHandler=new Pdf2SwfPageConverterHandler();
  pb.setProcessListener(pHandler);
  NuProcess process=pb.start();
  try {
    process.waitFor(60,TimeUnit.SECONDS);
  }
 catch (  InterruptedException e) {
    log.error(e.getMessage());
  }
  File destFile=new File(dest);
  if (pHandler.isConversionSuccessfull() && destFile.exists() && pHandler.numberOfPlacements() < placementsThreshold && pHandler.numberOfTextTags() < defineTextThreshold && pHandler.numberOfImageTags() < imageTagThreshold) {
    return true;
  }
 else {
    log.debug("Previous conversion generated {} PlaceObject tags, {} DefineText tags and {} Images. Falling back to 'poly2bitmap' option for pdf2swf.",pHandler.numberOfPlacements(),pHandler.numberOfTextTags(),pHandler.numberOfImageTags());
    NuProcessBuilder pbBmp=new NuProcessBuilder(Arrays.asList(SWFTOOLS_DIR + File.separator + "pdf2swf",AVM2SWF,"-s","poly2bitmap","-F",fontsDir,"-p",String.valueOf(page),source,"-o",dest));
    Pdf2SwfPageConverterHandler pBmpHandler=new Pdf2SwfPageConverterHandler();
    pbBmp.setProcessListener(pBmpHandler);
    NuProcess processBmp=pbBmp.start();
    try {
      processBmp.waitFor(60,TimeUnit.SECONDS);
    }
 catch (    InterruptedException e) {
      log.error(e.getMessage());
    }
    boolean doneBmp=pBmpHandler.isConversionSuccessfull();
    if (doneBmp && destFile.exists()) {
      return true;
    }
 else {
      log.warn("Failed to convert: " + dest + " does not exist.");
      return false;
    }
  }
}
