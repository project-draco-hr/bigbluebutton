{
  HashMap<String,User> map=new HashMap<String,User>();
  Jedis jedis=messagingService.createRedisClient();
  Set<String> userids=jedis.smembers("meeting-" + meetingID + "-users");
  for (  String userid : userids) {
    Map<String,String> users=jedis.hgetAll("meeting-" + meetingID + "-user-"+ userid);
    String internalUserID=users.get("pubID");
    String externalUserID=UUID.randomUUID().toString();
    Map<String,String> status_from_db=jedis.hgetAll("meeting-" + meetingID + "-user-"+ userid+ "-status");
    Map<String,Object> status=new HashMap<String,Object>();
    status.put("raiseHand",Boolean.parseBoolean(status_from_db.get("raiseHand")));
    status.put("presenter",Boolean.parseBoolean(status_from_db.get("presenter")));
    status.put("hasStream",Boolean.parseBoolean(status_from_db.get("hasStream")));
    User p=new User(internalUserID,users.get("username"),users.get("role"),externalUserID,status);
    map.put(internalUserID,p);
  }
  messagingService.dropRedisClient(jedis);
  return map;
}
