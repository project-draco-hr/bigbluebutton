{
  String action=event.getEventHeaders().get("Action");
  if (action == null) {
    return;
  }
  if (action.equals(START_RECORDING_EVENT)) {
    if (confName.endsWith(DESKSHARE_CONFERENCE_NAME_SUFFIX)) {
      if (event.getEventHeaders().get("Path").startsWith("rtmp")) {
        DeskShareRTMPBroadcastEvent rtmp=new DeskShareRTMPBroadcastEvent(confName,true);
        rtmp.setBroadcastingStreamUrl(getStreamUrl(event));
        rtmp.setTimestamp(genTimestamp().toString());
        System.out.println("DeskShare conference broadcast started. url=[" + getStreamUrl(event) + "], conf=["+ confName+ "]");
        conferenceEventListener.handleConferenceEvent(rtmp);
      }
    }
 else {
      VoiceStartRecordingEvent sre=new VoiceStartRecordingEvent(confName,true);
      sre.setRecordingFilename(getRecordFilenameFromEvent(event));
      sre.setTimestamp(genTimestamp().toString());
      System.out.println("Voice conference recording started. file=[" + getRecordFilenameFromEvent(event) + "], conf=["+ confName+ "]");
      conferenceEventListener.handleConferenceEvent(sre);
    }
  }
 else   if (action.equals(STOP_RECORDING_EVENT)) {
    if (confName.endsWith(DESKSHARE_CONFERENCE_NAME_SUFFIX)) {
      if (containsRTMPStream(event)) {
        DeskShareRTMPBroadcastEvent rtmp=new DeskShareRTMPBroadcastEvent(confName,false);
        rtmp.setBroadcastingStreamUrl(getStreamUrl(event));
        rtmp.setTimestamp(genTimestamp().toString());
        System.out.println("DeskShare conference broadcast stopped. url=[" + getStreamUrl(event) + "], conf=["+ confName+ "]");
        conferenceEventListener.handleConferenceEvent((VoiceConferenceEvent)rtmp);
      }
    }
 else {
      VoiceStartRecordingEvent sre=new VoiceStartRecordingEvent(confName,false);
      sre.setRecordingFilename(getRecordFilenameFromEvent(event));
      sre.setTimestamp(genTimestamp().toString());
      System.out.println("Voice conference recording stopped. file=[" + getRecordFilenameFromEvent(event) + "], conf=["+ confName+ "]");
      conferenceEventListener.handleConferenceEvent(sre);
    }
  }
 else {
    System.out.println("Processing UNKNOWN conference Action " + action + "]");
  }
}
