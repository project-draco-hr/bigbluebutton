{
  String messageLine=e.getMessage().toString();
  log.debug("Received string: [{}]",e.getMessage());
  log.trace("State [{}]",state);
switch (state) {
case NEW_MESSAGE:
    if (messageLine.isEmpty()) {
      break;
    }
  currentMessage=new EslMessage();
state=State.READ_HEADER_LINE;
case READ_HEADER_LINE:
if (messageLine.isEmpty()) {
if (currentMessage.hasContentLength()) {
  state=State.READ_BODY_LINE;
}
 else {
  state=State.NEW_MESSAGE;
  UpstreamMessageEvent upstreamEvent=new UpstreamMessageEvent(e.getChannel(),currentMessage,e.getRemoteAddress());
  currentMessage=null;
  ctx.sendUpstream(upstreamEvent);
}
}
 else {
String[] headerParts=HeaderParser.splitHeader(messageLine);
Name headerName=Name.fromLiteral(headerParts[0]);
if (headerName == null) {
  if (treatUnknownHeadersAsBody) {
    currentMessage.addBodyLine(messageLine);
  }
 else {
    throw new IllegalStateException("Unhandled ESL header [" + headerParts[0] + ']');
  }
}
currentMessage.addHeader(headerName,headerParts[1]);
}
break;
case READ_BODY_LINE:
currentMessage.addBodyLine(messageLine);
if (!currentMessage.waitingForContent()) {
state=State.NEW_MESSAGE;
UpstreamMessageEvent upstreamEvent=new UpstreamMessageEvent(e.getChannel(),currentMessage,e.getRemoteAddress());
currentMessage=null;
ctx.sendUpstream(upstreamEvent);
}
break;
default :
break;
}
}
