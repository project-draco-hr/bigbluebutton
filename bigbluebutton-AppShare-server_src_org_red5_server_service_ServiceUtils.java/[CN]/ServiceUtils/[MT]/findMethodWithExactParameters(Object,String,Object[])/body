{
  int numParams=(args == null) ? 0 : args.length;
  List methods=ConversionUtils.findMethodsByNameAndNumParams(service,methodName,numParams);
  if (log.isDebugEnabled()) {
    log.debug("Found " + methods.size() + " methods");
  }
  if (methods.isEmpty()) {
    return new Object[]{null,null};
  }
 else   if (methods.size() > 1) {
    log.debug("Multiple methods found with same name and parameter count.");
    log.debug("Parameter conversion will be attempted in order.");
  }
  Method method=null;
  Object[] params=null;
  for (int i=0; i < methods.size(); i++) {
    method=(Method)methods.get(i);
    boolean valid=true;
    Class<?>[] paramTypes=method.getParameterTypes();
    for (int j=0; j < args.length; j++) {
      if ((args[j] == null && paramTypes[j].isPrimitive()) || (args[j] != null && !args[j].getClass().equals(paramTypes[j]))) {
        valid=false;
        break;
      }
    }
    if (valid) {
      return new Object[]{method,args};
    }
  }
  for (int i=0; i < methods.size(); i++) {
    try {
      method=(Method)methods.get(i);
      params=ConversionUtils.convertParams(args,method.getParameterTypes());
      if (args.length > 0 && (args[0] instanceof IConnection) && (!(params[0] instanceof IConnection))) {
        continue;
      }
      return new Object[]{method,params};
    }
 catch (    Exception ex) {
      log.debug("Parameter conversion failed for " + method);
    }
  }
  return new Object[]{null,null};
}
