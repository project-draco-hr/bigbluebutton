{
  final Collection<Voicemailbox> voicemailboxes;
  ManagerResponse response;
  final List<String> result;
  initializeIfNeeded();
  voicemailboxes=new ArrayList<Voicemailbox>();
  response=sendAction(new CommandAction(SHOW_VOICEMAIL_USERS_COMMAND));
  if (!(response instanceof CommandResponse)) {
    logger.error("Response to CommandAction(\"" + SHOW_VOICEMAIL_USERS_COMMAND + "\") was not a CommandResponse but "+ response);
    return voicemailboxes;
  }
  result=((CommandResponse)response).getResult();
  if (result == null || result.size() < 1) {
    return voicemailboxes;
  }
  result.remove(0);
  for (  String line : result) {
    final Matcher matcher;
    final Voicemailbox voicemailbox;
    final String context;
    final String mailbox;
    final String user;
    matcher=SHOW_VOICEMAIL_USERS_PATTERN.matcher(line);
    if (!matcher.find()) {
      continue;
    }
    context=matcher.group(1);
    mailbox=matcher.group(2);
    user=matcher.group(3).trim();
    voicemailbox=new Voicemailbox(mailbox,context,user);
    voicemailboxes.add(voicemailbox);
  }
  for (  Voicemailbox voicemailbox : voicemailboxes) {
    final String fullname;
    fullname=voicemailbox.getMailbox() + "@" + voicemailbox.getContext();
    response=sendAction(new MailboxCountAction(fullname));
    if (response instanceof MailboxCountResponse) {
      MailboxCountResponse mailboxCountResponse;
      mailboxCountResponse=(MailboxCountResponse)response;
      voicemailbox.setNewMessages(mailboxCountResponse.getNewMessages());
      voicemailbox.setOldMessages(mailboxCountResponse.getOldMessages());
    }
 else {
      logger.error("Response to MailboxCountAction was not a MailboxCountResponse but " + response);
    }
  }
  return voicemailboxes;
}
