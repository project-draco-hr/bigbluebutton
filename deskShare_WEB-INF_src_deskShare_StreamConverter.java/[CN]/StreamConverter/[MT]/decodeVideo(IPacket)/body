{
  int retval=-1;
  IVideoPicture inPicture=IVideoPicture.make(mInVideoCoder.getPixelType(),mInVideoCoder.getWidth(),mInVideoCoder.getHeight());
  IVideoPicture reSample=null;
  int offset=0;
  while (offset < decodePacket.getSize()) {
    log.debug("ready to decode video; keyframe: {}",decodePacket.isKey());
    try {
      retval=mInVideoCoder.decodeVideo(inPicture,decodePacket,offset);
    }
  finally {
    }
    log.debug("decode video completed; packet size: {}; offset: {}; bytes consumed: {}; frame complete: {}; width: {}; height: {}",new Object[]{decodePacket.getSize(),offset,retval,inPicture.isComplete(),inPicture.getWidth(),inPicture.getHeight()});
    if (retval <= 0) {
      throw new RuntimeException("could not decode video");
    }
    offset+=retval;
    IVideoPicture postDecode=inPicture;
    if (mVideoPictureListener != null) {
      try {
        postDecode=mVideoPictureListener.postDecode(inPicture);
        if (postDecode == null)         postDecode=inPicture;
      }
  finally {
      }
    }
    if (postDecode.isComplete()) {
      reSample=resampleVideo(postDecode);
    }
 else {
      reSample=postDecode;
    }
    if (reSample.isComplete()) {
      encodeVideo(reSample);
    }
  }
}
