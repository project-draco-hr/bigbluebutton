{
  Thread t=new Thread(new Runnable(){
    @Override public void run(){
      jedis.subscribe(new JedisPubSub(){
        @Override public void onUnsubscribe(        String arg0,        int arg1){
        }
        @Override public void onSubscribe(        String arg0,        int arg1){
        }
        @Override public void onPUnsubscribe(        String arg0,        int arg1){
        }
        @Override public void onPSubscribe(        String arg0,        int arg1){
        }
        @Override public void onPMessage(        String pattern,        String channel,        String message){
          if (channel.equalsIgnoreCase("bigbluebutton:meeting:request")) {
            String[] args=message.split(":");
            String roomname=args[0];
            String type=args[1];
            if (type.equalsIgnoreCase("end")) {
              roomsManager.endMeetingRequest(roomname);
            }
          }
 else           if (channel.equalsIgnoreCase("bigbluebutton:meeting:presentation")) {
            System.out.println("receiving Message " + message);
            Gson gson=new Gson();
            HashMap<String,Object> map=gson.fromJson(message,HashMap.class);
            messageListener.handleReceivedMessage(map);
          }
        }
        @Override public void onMessage(        String channel,        String message){
        }
      }
,"bigbluebutton:meeting:*");
    }
  }
);
  t.start();
}
