{
  System.out.println("Numpages = [" + numPages + "] exceptPage = ["+ exceptPage+ "]");
  for (int i=numPages - 1; i > exceptPage; i--) {
    XDrawPage xPage;
    try {
      xPage=PageHelper.getDrawPageByIndex(doc,i);
      PageHelper.removeDrawPage(doc,xPage);
    }
 catch (    IndexOutOfBoundsException e) {
      logger.error("ERROR::Removing page = [" + i + "] exceptPage = ["+ exceptPage+ "]");
      updatesMsgSender.sendMessage(room,ReturnCode.FAIL,"Failed while trying to extract pages from document.");
    }
catch (    WrappedTargetException e) {
      logger.error("ERROR::Removing page = [" + i + "] exceptPage = ["+ exceptPage+ "]");
      updatesMsgSender.sendMessage(room,ReturnCode.FAIL,"Failed while trying to extract pages from document.");
    }
  }
  int firstPage=0;
  for (int i=0; i < exceptPage; i++) {
    XDrawPage xPage;
    try {
      xPage=PageHelper.getDrawPageByIndex(doc,firstPage);
      PageHelper.removeDrawPage(doc,xPage);
    }
 catch (    IndexOutOfBoundsException e) {
      logger.error("ERROR::Removing page = [" + i + "] exceptPage = ["+ exceptPage+ "]");
      updatesMsgSender.sendMessage(room,ReturnCode.FAIL,"Failed while trying to extract pages from document.");
    }
catch (    WrappedTargetException e) {
      logger.error("ERROR::Removing page = [" + i + "] exceptPage = ["+ exceptPage+ "]");
      updatesMsgSender.sendMessage(room,ReturnCode.FAIL,"Failed while trying to extract pages from document.");
    }
  }
  return doc;
}
