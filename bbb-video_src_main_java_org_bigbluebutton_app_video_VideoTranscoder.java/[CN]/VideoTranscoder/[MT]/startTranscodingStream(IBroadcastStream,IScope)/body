{
  log.debug("startTranscodingStream({},{})",aStream.getPublishedName(),aScope.getName());
  if (aStream.getPublishedName().startsWith(VideoAppConstants.TILE_PREFIX)) {
    log.debug("Not making a copy of a copy: {}",aStream.getPublishedName());
    return;
  }
  log.debug("Making transcoded version of: {}",aStream.getPublishedName());
  String outputName=VideoAppConstants.TILE_PREFIX + aStream.getPublishedName();
  BroadcastStream outputStream=new BroadcastStream(outputName);
  outputStream.setPublishedName(outputName);
  outputStream.setScope(aScope);
  IContext context=aScope.getContext();
  IProviderService providerService=(IProviderService)context.getBean(IProviderService.BEAN_NAME);
  if (providerService.registerBroadcastStream(aScope,outputName,outputStream)) {
    IBroadcastScope bsScope=(BroadcastScope)providerService.getLiveProviderInput(aScope,outputName,true);
    bsScope.setAttribute(IBroadcastScope.STREAM_ATTRIBUTE,outputStream);
  }
 else {
    log.error("Got a fatal error; could not register broadcast stream");
    throw new RuntimeException("fooey!");
  }
  mOutputStreams.put(aStream.getPublishedName(),outputStream);
  outputStream.start();
  ISimpleMediaFile outputStreamInfo=new SimpleMediaFile();
  outputStreamInfo.setHasAudio(false);
  outputStreamInfo.setHasVideo(true);
  outputStreamInfo.setVideoWidth(VideoAppConstants.TILE_WIDTH);
  outputStreamInfo.setVideoHeight(VideoAppConstants.TILE_HEIGHT);
  outputStreamInfo.setVideoBitRate(320000);
  outputStreamInfo.setVideoCodec(ICodec.ID.CODEC_ID_FLV1);
  outputStreamInfo.setVideoGlobalQuality(0);
  Transcoder transcoder=new Transcoder(aStream,outputStream,outputStreamInfo,null,null,pictureListener);
  Thread transcoderThread=new Thread(transcoder);
  transcoderThread.setDaemon(true);
  mTranscoders.put(aStream.getPublishedName(),transcoder);
  log.debug("Starting transcoding thread for: {}",aStream.getPublishedName());
  transcoderThread.start();
}
