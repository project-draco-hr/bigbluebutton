{
  String file=null;
  String remote_user=null;
  boolean opt_regist=false;
  boolean opt_unregist=false;
  boolean opt_unregist_all=false;
  int opt_expires=0;
  for (int i=0; i < args.length; i++) {
    if (args[i].equals("-f") && args.length > (i + 1)) {
      file=args[++i];
      continue;
    }
    if (args[i].equals("-c")) {
      remote_user=args[++i];
      continue;
    }
    if (args[i].equals("-g") && args.length > (i + 1)) {
      opt_regist=true;
      String time=args[++i];
      if (time.charAt(time.length() - 1) == 'h')       opt_expires=Integer.parseInt(time.substring(0,time.length() - 1)) * 3600;
 else       opt_expires=Integer.parseInt(time);
      continue;
    }
    if (args[i].equals("-u")) {
      opt_unregist=true;
      continue;
    }
    if (args[i].equals("-z")) {
      opt_unregist_all=true;
      continue;
    }
    if (!args[i].equals("-h"))     System.out.println("unrecognized param '" + args[i] + "'\n");
    System.out.println("usage:\n   java CommandLineMA [options]");
    System.out.println("   options:");
    System.out.println("   -h               this help");
    System.out.println("   -f <config_file> specifies a configuration file");
    System.out.println("   -c <remote_user> the corresponding user");
    System.out.println("   -g <time>        registers the contact URL with the registrar server");
    System.out.println("                    where time is the duration of the registration, and can be");
    System.out.println("                    in seconds (default) or hours ( -r 7200 is the same as -r 2h )");
    System.out.println("   -u               unregisters the contact URL with the registrar server");
    System.out.println("                    (is the same as -r 0)");
    System.out.println("   -z               unregisters ALL the contact URLs");
    System.exit(0);
  }
  SipStack.init(file);
  UserAgentProfile user_profile=new UserAgentProfile(file);
  if (opt_regist)   user_profile.do_register=true;
  if (opt_unregist)   user_profile.do_unregister=true;
  if (opt_unregist_all)   user_profile.do_unregister_all=true;
  CommandLineMA command_ma=new CommandLineMA(new SipProvider(file),user_profile);
  if (user_profile.do_unregister_all) {
    command_ma.printLog("UNREGISTER ALL contact URLs");
    command_ma.unregisterall();
  }
  if (user_profile.do_unregister) {
    command_ma.printLog("UNREGISTER the contact URL");
    command_ma.unregister();
  }
  if (user_profile.do_register) {
    command_ma.printLog("REGISTRATION");
    command_ma.register(user_profile.expires);
  }
  System.out.println("type the messages to send or 'exit' to quit:");
  while (true) {
    try {
      BufferedReader in=new BufferedReader(new InputStreamReader(System.in));
      String subject=null;
      String message=in.readLine();
      if (message.equals("exit"))       System.exit(0);
      if (remote_user == null)       remote_user=command_ma.getRemoteUser();
      command_ma.send(remote_user,subject,message);
    }
 catch (    Exception e) {
      e.printStackTrace();
    }
  }
}
