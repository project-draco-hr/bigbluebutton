{
  log.debug("***** " + APP + " [ "+ " roomConnect [ "+ connection.getScope().getName()+ "] *********");
  String username=((String)params[0]).toString();
  String role=((String)params[1]).toString();
  String room=((String)params[2]).toString();
  String voiceBridge=((String)params[3]).toString();
  boolean record=(Boolean)params[4];
  String externalUserID=((String)params[5]).toString();
  String internalUserID=((String)params[6]).toString();
  Boolean locked=false;
  if (params.length >= 7 && ((Boolean)params[7])) {
    locked=true;
  }
  Boolean muted=false;
  if (params.length >= 8 && ((Boolean)params[8])) {
    muted=true;
  }
  Map<String,Boolean> lsMap=null;
  if (params.length >= 9) {
    try {
      lsMap=(Map<String,Boolean>)params[9];
    }
 catch (    Exception e) {
      lsMap=new HashMap<String,Boolean>();
    }
  }
  if (record == true) {
    recorderApplication.createRecordSession(room);
  }
  BigBlueButtonSession bbbSession=new BigBlueButtonSession(room,internalUserID,username,role,voiceBridge,record,externalUserID,muted);
  connection.setAttribute(Constants.SESSION,bbbSession);
  connection.setAttribute("INTERNAL_USER_ID",internalUserID);
  String debugInfo="internalUserID=" + internalUserID + ",username="+ username+ ",role="+ role+ ","+ ",voiceConf="+ voiceBridge+ ",room="+ room+ ",externalUserid="+ externalUserID;
  log.debug("User [{}] connected to room [{}]",debugInfo,room);
  bbbGW.initLockSettings(room,locked,lsMap);
  connInvokerService.addConnection(bbbSession.getInternalUserID(),connection);
  log.info("User connected: sessionId=[" + Red5.getConnectionLocal().getSessionId() + "], encoding=["+ Red5.getConnectionLocal().getType()+ "(persistent=RTMP,polling=RTMPT)], meetingId= ["+ bbbSession.getRoom()+ "], userId=["+ bbbSession.getInternalUserID()+ "] username=["+ bbbSession.getUsername()+ "]");
  return super.roomConnect(connection,params);
}
