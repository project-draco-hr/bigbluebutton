{
  String remoteHost=Red5.getConnectionLocal().getRemoteAddress();
  int remotePort=Red5.getConnectionLocal().getRemotePort();
  String clientId=Red5.getConnectionLocal().getClient().getId();
  log.info("***** " + APP + "[clientid="+ clientId+ "] disconnnected from "+ remoteHost+ ":"+ remotePort+ ".");
  BigBlueButtonSession bbbSession=(BigBlueButtonSession)Red5.getConnectionLocal().getAttribute(Constants.SESSION);
  String meetingId=bbbSession.getRoom();
  String userId=bbbSession.getInternalUserID();
  String connType=getConnectionType(Red5.getConnectionLocal().getType());
  String userFullname=bbbSession.getUsername();
  String connId=Red5.getConnectionLocal().getSessionId();
  String sessionId=CONN + connId + "-"+ userId;
  log.info("User disconnected: sessionId=[" + sessionId + "], encoding=["+ connType+ "], meetingId= ["+ meetingId+ "], userId=["+ userId+ "] username=["+ userFullname+ "]");
  Map<String,Object> logData=new HashMap<String,Object>();
  logData.put("meetingId",meetingId);
  logData.put("connType",connType);
  logData.put("connId",connId);
  logData.put("sessionId",sessionId);
  logData.put("userId",userId);
  logData.put("username",userFullname);
  logData.put("event","user_leaving_bbb_apps");
  logData.put("description","User leaving BBB Apps.");
  Gson gson=new Gson();
  String logStr=gson.toJson(logData);
  log.info("User leaving bbb-apps: data={}",logStr);
  connInvokerService.removeConnection(sessionId);
  bbbGW.userLeft(bbbSession.getRoom(),getBbbSession().getInternalUserID(),sessionId);
  super.roomDisconnect(conn);
}
