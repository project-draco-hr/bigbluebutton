{
  @SuppressWarnings("unused") int version=in.getUnsignedShort();
  int count=in.getUnsignedShort();
  Deserializer deserializer=new Deserializer();
  Input input=new Input(in);
  for (int i=0; i < count; i++) {
    String name=Input.getString(in);
    @SuppressWarnings("unused") boolean required=(in.get() == 0x01);
    @SuppressWarnings("unused") int len=in.getInt();
    Object value=deserializer.deserialize(input,Object.class);
    if (name.equals(RemotingHeader.APPEND_TO_GATEWAY_URL)) {
      appendToUrl=(String)value;
    }
 else     if (name.equals(RemotingHeader.REPLACE_GATEWAY_URL)) {
      url=(String)value;
    }
 else     if (name.equals(RemotingHeader.PERSISTENT_HEADER)) {
      if (value instanceof Map) {
        @SuppressWarnings("unchecked") Map<String,Object> valueMap=(Map<String,Object>)value;
        RemotingHeader header=new RemotingHeader((String)valueMap.get("name"),(Boolean)valueMap.get("mustUnderstand"),valueMap.get("data"));
        headers.put(header.name,header);
      }
 else {
        log.error("Expected Map but received " + value);
      }
    }
 else {
      log.warn("Unsupported remoting header \"" + name + "\" received with value "+ value);
    }
  }
}
