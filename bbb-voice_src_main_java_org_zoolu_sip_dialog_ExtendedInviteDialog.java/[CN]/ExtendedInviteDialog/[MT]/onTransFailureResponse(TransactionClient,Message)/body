{
  printLog("onTransFailureResponse 1",LogLevel.HIGH);
  printLog("inside onTransFailureResponse(" + tc.getTransactionId() + ",msg)",LogLevel.LOW);
  String method=tc.getTransactionMethod();
  StatusLine status_line=msg.getStatusLine();
  int code=status_line.getCode();
  String reason=status_line.getReason();
  if ((code == 401 && attempts < MAX_ATTEMPTS && msg.hasWwwAuthenticateHeader() && msg.getWwwAuthenticateHeader().getRealmParam().equalsIgnoreCase(realm)) || (code == 407 && attempts < MAX_ATTEMPTS && msg.hasProxyAuthenticateHeader() && msg.getProxyAuthenticateHeader().getRealmParam().equalsIgnoreCase(realm))) {
    attempts++;
    Message ack=MessageFactory.createRequest(this,SipMethods.ACK,null);
    AckTransactionClient acktc=new AckTransactionClient(sip_provider,ack,null);
    acktc.request();
    Message req=tc.getRequestMessage();
    ViaHeader via=req.getViaHeader();
    req.removeViaHeader();
    via.setBranch(SipProvider.pickBranch());
    req.addViaHeader(via);
    req.setCSeqHeader(req.getCSeqHeader().incSequenceNumber());
    WwwAuthenticateHeader wah;
    if (code == 401)     wah=msg.getWwwAuthenticateHeader();
 else     wah=msg.getProxyAuthenticateHeader();
    String qop_options=wah.getQopOptionsParam();
    qop=(qop_options != null) ? "auth" : null;
    RequestLine rl=req.getRequestLine();
    DigestAuthentication digest=new DigestAuthentication(rl.getMethod(),rl.getAddress().toString(),wah,qop,null,username,passwd);
    AuthorizationHeader ah;
    if (code == 401)     ah=digest.getAuthorizationHeader();
 else     ah=digest.getProxyAuthorizationHeader();
    req.setAuthorizationHeader(ah);
    if (req.isInvite())     this.invite_req=req;
    transactions.remove(tc.getTransactionId());
    tc=new TransactionClient(sip_provider,req,this);
    transactions.put(tc.getTransactionId(),tc);
    tc.request();
  }
 else   if (method.equals(SipMethods.INVITE) || method.equals(SipMethods.CANCEL) || method.equals(SipMethods.BYE)) {
    super.onTransFailureResponse(tc,msg);
  }
 else   if (tc.getTransactionMethod().equals(SipMethods.REFER)) {
    transactions.remove(tc.getTransactionId());
    dialog_listener.onDlgReferResponse(this,code,reason,msg);
  }
 else {
    String body=msg.getBody();
    transactions.remove(tc.getTransactionId());
    dialog_listener.onDlgAltResponse(this,method,code,reason,body,msg);
  }
}
