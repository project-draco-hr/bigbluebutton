{
  beginUpdate();
  try {
    so.sendMessage(handler,arguments);
  }
  finally {
    endUpdate();
  }
  String serviceName, serviceMethod;
  int dotPos=handler.lastIndexOf('.');
  if (dotPos != -1) {
    serviceName=handler.substring(0,dotPos);
    serviceMethod=handler.substring(dotPos + 1);
  }
 else {
    serviceName="";
    serviceMethod=handler;
  }
  Object soHandler=getServiceHandler(serviceName);
  if (soHandler == null && hasParent()) {
    IContext context=getParent().getContext();
    try {
      soHandler=context.getBean(so.getName() + '.' + serviceName+ ".soservice");
    }
 catch (    Exception err) {
      log.debug("No such bean");
    }
  }
  if (soHandler != null) {
    Object[] methodResult=ServiceUtils.findMethodWithExactParameters(soHandler,serviceMethod,arguments);
    if (methodResult.length == 0 || methodResult[0] == null) {
      methodResult=ServiceUtils.findMethodWithListParameters(soHandler,serviceMethod,arguments);
    }
    if (methodResult.length > 0 && methodResult[0] != null) {
      Method method=(Method)methodResult[0];
      Object[] params=(Object[])methodResult[1];
      try {
        method.invoke(soHandler,params);
      }
 catch (      Exception err) {
        log.error("Error while invoking method " + serviceMethod + " on shared object handler "+ handler,err);
      }
    }
  }
  for (  ISharedObjectListener listener : serverListeners) {
    listener.onSharedObjectSend(this,handler,arguments);
  }
}
