{
  System.out.println("Mouse Tracker:: Image=[" + captureWidth + ","+ captureHeight+ "] scale=["+ scaleWidth+ ","+ scaleHeight+ "]");
  if (captureWidth < scaleWidth || captureHeight < scaleHeight) {
    int imgWidth=captureWidth;
    int imgHeight=captureHeight;
    if (imgWidth < scaleWidth && imgHeight < scaleHeight) {
      System.out.println("Capture is smaller than scale dims. Just draw the image. capture=[" + captureWidth + ","+ captureHeight+ "] scale=["+ scaleWidth+ ","+ scaleHeight+ "]");
      int imgX=(scaleWidth - captureWidth) / 2;
      int imgY=(scaleHeight - captureHeight) / 2;
      int mX=p.x - captureX + imgX;
      int mY=p.y - captureY + imgY;
      System.out.println("m=[" + mX + ","+ mY+ "] p=["+ p.x+ ","+ p.y+ "] capture=["+ captureX+ ","+ captureY+ "]");
      return new Point(mX,mY);
    }
 else {
      if (imgWidth > scaleWidth) {
        System.out.println("Fit to width.");
        double ratio=(double)imgHeight / (double)imgWidth;
        imgWidth=scaleWidth;
        imgHeight=(int)((double)imgWidth * ratio);
        int imgX=(scaleWidth - imgWidth) / 2;
        int imgY=(scaleHeight - imgHeight) / 2;
        int mX=p.x - captureX;
        int mY=p.y - captureY;
        return new Point(imgX + mX,imgY + mY);
      }
 else {
        System.out.println("Fit to height.");
        double hRatio=(double)scaleHeight / (double)captureHeight;
        imgHeight=scaleHeight;
        imgWidth=(int)((double)imgHeight * hRatio);
        int imgX=(scaleWidth - imgWidth) / 2;
        int imgY=(scaleHeight - imgHeight) / 2;
        double wRatio=imgWidth / captureWidth;
        int mX=(int)((p.x - captureX) * wRatio);
        int mY=(int)((p.y - captureY) * hRatio);
        return new Point(imgX + mX,imgY + mY);
      }
    }
  }
 else {
    System.out.println("Both capture sides are greater than the scaled dims. Downscale image.");
    double mx=((double)p.x / (double)captureWidth) * (double)scaleWidth;
    double my=((double)p.y / (double)captureHeight) * (double)scaleHeight;
    mx=mx - captureX;
    my=my - captureY;
    return new Point((int)mx,(int)my);
  }
}
