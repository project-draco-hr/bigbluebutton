{
  Transcoder rtmpToRtpTranscoder, rtpToRtmpTranscoder;
  System.out.println("Using codec " + sipCodec.getCodecId() + " "+ sipCodec.getCodecName());
  if (sipCodec.getCodecId() == SpeexCodec.codecId) {
    System.out.println("Using SPEEX codec " + sipCodec.getCodecId() + " "+ sipCodec.getCodecName());
    rtmpToRtpTranscoder=new RtmpToRtpSpeexTranscoder(sipCodec);
    rtpToRtmpTranscoder=new RtpToRtmpSpeexTranscoder(sipCodec);
  }
 else {
    rtmpToRtpTranscoder=new NellyToPcmTranscoder(sipCodec);
    rtpToRtmpTranscoder=new PcmToNellyTranscoder(sipCodec);
  }
  System.out.println("Packetization [" + sipCodec.getIncomingPacketization() + ","+ sipCodec.getOutgoingPacketization()+ "]");
  System.out.println("Outgoing Frame size [" + sipCodec.getOutgoingEncodedFrameSize() + ", "+ sipCodec.getOutgoingDecodedFrameSize()+ "]");
  System.out.println("Incoming Frame size [" + sipCodec.getIncomingEncodedFrameSize() + ", "+ sipCodec.getIncomingDecodedFrameSize()+ "]");
  userListenStream=new SipToFlashAudioStream(scope,rtpToRtmpTranscoder,connInfo.getSocket());
  userListenStream.addListenStreamObserver(this);
  rtpToRtmpTranscoder.addTranscodedAudioDataListener(userListenStream);
  userTalkStream=new FlashToSipAudioStream(rtmpToRtpTranscoder,connInfo.getSocket(),connInfo);
}
