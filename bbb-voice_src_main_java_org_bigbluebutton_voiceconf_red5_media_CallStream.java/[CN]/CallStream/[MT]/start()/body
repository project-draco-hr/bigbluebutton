{
  SipToFlashTranscoder sipToFlashTranscoder=new SpeexSipToFlashTranscoderImp(sipCodec);
  FlashToSipTranscoder flashToSipTranscoder=new SpeexFlashToSipTranscoderImp(sipCodec);
  System.out.println("Using codec " + sipCodec.getCodecId() + " "+ sipCodec.getCodecName());
  if (sipCodec.getCodecId() == SpeexCodec.codecId) {
    flashToSipTranscoder=new SpeexFlashToSipTranscoderImp(sipCodec);
    sipToFlashTranscoder=new SpeexSipToFlashTranscoderImp(sipCodec);
  }
 else {
  }
  log.info("Using codec=" + sipCodec.getCodecName() + " id="+ sipCodec.getCodecId());
  log.debug("Packetization [" + sipCodec.getIncomingPacketization() + ","+ sipCodec.getOutgoingPacketization()+ "]");
  log.debug("Outgoing Frame size [" + sipCodec.getOutgoingEncodedFrameSize() + ", "+ sipCodec.getOutgoingDecodedFrameSize()+ "]");
  log.debug("Incoming Frame size [" + sipCodec.getIncomingEncodedFrameSize() + ", "+ sipCodec.getIncomingDecodedFrameSize()+ "]");
  userListenStream=new SipToFlashAudioStream(scope,sipToFlashTranscoder,connInfo.getSocket());
  userListenStream.addListenStreamObserver(this);
  userTalkStream=new FlashToSipAudioStream(flashToSipTranscoder,connInfo.getSocket(),connInfo);
}
