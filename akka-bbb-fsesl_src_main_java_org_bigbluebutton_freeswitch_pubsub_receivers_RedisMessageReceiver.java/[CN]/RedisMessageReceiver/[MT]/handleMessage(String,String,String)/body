{
  if (channel.equalsIgnoreCase(TO_VOICE_CONF_SYSTEM_CHAN)) {
    JsonParser parser=new JsonParser();
    JsonObject obj=(JsonObject)parser.parse(message);
    if (obj.has("header") && obj.has("payload")) {
      JsonObject header=(JsonObject)obj.get("header");
      if (header.has("name")) {
        String messageName=header.get("name").getAsString();
switch (messageName) {
case EjectAllUsersFromVoiceConfRequestMessage.EJECT_ALL_VOICE_USERS_REQUEST:
          processEjectAllVoiceUsersRequestMessage(message);
        break;
case EjectUserFromVoiceConfRequestMessage.EJECT_VOICE_USER_REQUEST:
      processEjectVoiceUserRequestMessage(message);
    break;
case GetUsersFromVoiceConfRequestMessage.GET_VOICE_USERS_REQUEST:
  processGetVoiceUsersRequestMessage(message);
break;
case MuteUserInVoiceConfRequestMessage.MUTE_VOICE_USER_REQUEST:
processMuteVoiceUserRequestMessage(message);
break;
case StartRecordingVoiceConfRequestMessage.START_RECORD_VOICE_CONF_REQUEST:
processStartRecordingVoiceConfRequestMessage(message);
break;
case StopRecordingVoiceConfRequestMessage.STOP_RECORD_VOICE_CONF_REQUEST:
processStopRecordingVoiceConfRequestMessage(message);
break;
case DeskShareStartRecordingEventMessage.DESKSHARE_START_RECORDING_MESSAGE:
System.out.println("\n\n\nDESKSHARE_START_RECORDING_MESSAGE\n\n");
processDeskShareStartRecordingEventMessage(message);
break;
case DeskShareStopRecordingEventMessage.DESKSHARE_STOP_RECORDING_MESSAGE:
System.out.println("\n\n\nDESKSHARE_STOP_RECORDING_MESSAGE\n\n");
processDeskShareStopRecordingEventMessage(message);
break;
case DeskShareStartRTMPBroadcastEventMessage.DESKSHARE_START_RTMP_BROADCAST_MESSAGE:
System.out.println("\n\n\nDESKSHARE_START_RTMP_BROADCAST_MESSAGE\n\n");
processDeskShareStartRTMPBroadcastEventMessage(message);
break;
case DeskShareStopRTMPBroadcastEventMessage.DESKSHARE_STOP_RTMP_BROADCAST_MESSAGE:
System.out.println("\n\n\nDESKSHARE_STOP_RTMP_BROADCAST_MESSAGE\n\n");
processDeskShareStopRTMPBroadcastEventMessage(message);
break;
case DeskShareHangUpEventMessage.DESKSHARE_HANG_UP_MESSAGE:
System.out.println("\nDESKSHARE_HANG_UP_MESSAGE\n");
processDeskShareHangUpEventMessage(message);
break;
}
}
}
}
}
