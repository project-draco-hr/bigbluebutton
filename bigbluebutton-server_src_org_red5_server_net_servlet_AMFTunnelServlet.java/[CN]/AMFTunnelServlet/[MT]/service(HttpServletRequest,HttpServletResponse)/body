{
  HttpClient client=new HttpClient(new MultiThreadedHttpConnectionManager());
  client.getHttpConnectionManager().getParams().setConnectionTimeout(30000);
  PostMethod get=new PostMethod("http://localhost:8080/gateway");
  try {
    String path=req.getContextPath();
    if (path == null) {
      path="";
    }
    if (req.getPathInfo() != null) {
      path+=req.getPathInfo();
    }
    int reqContentLength=req.getContentLength();
    if (reqContentLength > 0) {
      ByteBuffer reqBuffer=ByteBuffer.allocate(reqContentLength);
      ServletUtils.copy(req.getInputStream(),reqBuffer.asOutputStream());
      reqBuffer.flip();
      get.setRequestEntity(new InputStreamRequestEntity(reqBuffer.asInputStream(),reqContentLength,"application/x-amf"));
      get.addRequestHeader("Tunnel-request",path);
      client.executeMethod(get);
      if (get.getStatusCode() == HttpStatus.SC_OK) {
        resp.setContentType("application/x-amf");
        int responseLength=((Long)get.getResponseContentLength()).intValue();
        ByteBuffer respBuffer=ByteBuffer.allocate(responseLength);
        ServletUtils.copy(get.getResponseBodyAsStream(),respBuffer.asOutputStream());
        respBuffer.flip();
        ServletUtils.copy(respBuffer.asInputStream(),resp.getOutputStream());
        resp.flushBuffer();
      }
 else {
        resp.sendError(get.getStatusCode());
      }
    }
 else {
      resp.sendError(HttpStatus.SC_BAD_REQUEST);
    }
  }
 catch (  Exception ex) {
    ex.printStackTrace();
  }
 finally {
    get.releaseConnection();
  }
}
