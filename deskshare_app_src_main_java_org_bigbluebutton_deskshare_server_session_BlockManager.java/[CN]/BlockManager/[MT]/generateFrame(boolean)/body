{
  Map<Integer,Block> blocks=Collections.unmodifiableMap(new HashMap<Integer,Block>(blocksMap));
  screenVideoFrame.reset();
  byte[] encodedDim=ScreenVideoEncoder.encodeBlockAndScreenDimensions(blockDim.getWidth(),screenDim.getWidth(),blockDim.getHeight(),screenDim.getHeight());
  try {
    int numberOfBlocks=numberOfRows * numberOfColumns;
    byte videoDataHeader=ScreenVideoEncoder.encodeFlvVideoDataHeader(genKeyFrame);
    screenVideoFrame.write(videoDataHeader);
    screenVideoFrame.write(encodedDim);
    for (int position=1; position <= numberOfBlocks; position++) {
      Block block=(Block)blocks.get(new Integer(position));
      byte[] encodedBlock=ScreenVideoEncoder.encodeBlockUnchanged();
      if (block.hasChanged() || genKeyFrame) {
        encodedBlock=block.getEncodedBlock();
      }
      screenVideoFrame.write(encodedBlock,0,encodedBlock.length);
    }
    ScreenVideoFrame frame=new ScreenVideoFrame(room,screenVideoFrame);
    streamer.sendFrame(frame);
  }
 catch (  IOException e) {
    e.printStackTrace();
  }
}
