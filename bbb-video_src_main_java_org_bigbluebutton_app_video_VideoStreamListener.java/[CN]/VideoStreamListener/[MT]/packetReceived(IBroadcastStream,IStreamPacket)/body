{
  IoBuffer buf=packet.getData();
  if (buf != null)   buf.rewind();
  if (buf == null || buf.remaining() == 0) {
    return;
  }
  if (packet instanceof VideoData) {
    lastVideoTime=System.currentTimeMillis();
    if (!firstPacketReceived) {
      firstPacketReceived=true;
      publishing=true;
      timeoutJobName=scheduler.addScheduledJob(videoTimeout,new TimeoutJob());
      if (record) {
        Map<String,String> event=new HashMap<String,String>();
        event.put("module","WEBCAM");
        event.put("timestamp",genTimestamp().toString());
        event.put("meetingId",scope.getName());
        event.put("stream",stream.getPublishedName());
        event.put("eventName","StartWebcamShareEvent");
        recordingService.record(scope.getName(),event);
      }
    }
  }
}
