{
  if (keepAliveJobName != null) {
    schedulingService.removeScheduledJob(keepAliveJobName);
    keepAliveJobName=null;
  }
  Red5.setConnectionLocal(this);
  IStreamService streamService=(IStreamService)getScopeService(scope,IStreamService.class,StreamService.class);
  if (streamService != null) {
synchronized (streams) {
      for (      Map.Entry<Integer,IClientStream> entry : streams.entrySet()) {
        IClientStream stream=entry.getValue();
        if (stream != null) {
          if (log.isDebugEnabled()) {
            log.debug("Closing stream: {}",stream.getStreamId());
          }
          streamService.deleteStream(this,stream.getStreamId());
          usedStreams--;
        }
      }
      streams.clear();
    }
  }
  channels.clear();
  if (bwContext != null && getScope() != null && getScope().getContext() != null) {
    IBWControlService bwController=(IBWControlService)getScope().getContext().getBean(IBWControlService.KEY);
    bwController.unregisterBWControllable(bwContext);
    bwContext=null;
  }
  super.close();
}
