{
  expect(socketConnectionFacade.readLine()).andReturn("Response: Success");
  expect(socketConnectionFacade.readLine()).andReturn("Message: Authentication accepted");
  expect(socketConnectionFacade.readLine()).andReturn("");
  expect(socketConnectionFacade.readLine()).andReturn(null);
  replay(socketConnectionFacade);
  managerReader.setSocket(socketConnectionFacade);
  managerReader.run();
  verify(socketConnectionFacade);
  assertEquals("not exactly one response dispatched",1,dispatcher.dispatchedResponses.size());
  assertEquals("first response must be a ManagerResponse",ManagerResponse.class,dispatcher.dispatchedResponses.get(0).getClass());
  assertEquals("ManagerResponse contains incorrect response","Success",dispatcher.dispatchedResponses.get(0).getResponse());
  assertEquals("ManagerResponse contains incorrect message","Authentication accepted",dispatcher.dispatchedResponses.get(0).getMessage());
  assertEquals("ManagerResponse contains incorrect message (via getAttribute)","Authentication accepted",dispatcher.dispatchedResponses.get(0).getAttribute("MESSAGE"));
  assertEquals("ManagerResponse contains incorrect dateReceived",now,dispatcher.dispatchedResponses.get(0).getDateReceived());
  assertEquals("not exactly one events dispatched",1,dispatcher.dispatchedEvents.size());
  assertEquals("first event must be a DisconnectEvent",DisconnectEvent.class,dispatcher.dispatchedEvents.get(0).getClass());
}
