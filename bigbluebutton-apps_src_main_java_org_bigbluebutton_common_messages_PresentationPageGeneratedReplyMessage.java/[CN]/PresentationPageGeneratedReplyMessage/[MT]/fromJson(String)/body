{
  JsonParser parser=new JsonParser();
  JsonObject obj=(JsonObject)parser.parse(message);
  if (obj.has("header") && obj.has("payload")) {
    JsonObject header=(JsonObject)obj.get("header");
    JsonObject payload=(JsonObject)obj.get("payload");
    if (header.has("name")) {
      String messageName=header.get("name").getAsString();
      if (PRESENTATION_PAGE_GENERATED.equals(messageName)) {
        if (payload.has(Constants.MEETING_ID) && payload.has(Constants.CODE) && payload.has(Constants.MESSAGE_KEY)&& payload.has(Constants.PRESENTATION_NAME)&& payload.has(Constants.NUM_PAGES)&& payload.has(Constants.PAGES_COMPLETED)&& payload.has(Constants.PRESENTATION_ID)) {
          String meetingId=payload.get(Constants.MEETING_ID).getAsString();
          String presentationId=payload.get(Constants.PRESENTATION_ID).getAsString();
          String presentationName=payload.get(Constants.PRESENTATION_NAME).getAsString();
          String code=payload.get(Constants.CODE).getAsString();
          String messageKey=payload.get(Constants.MESSAGE_KEY).getAsString();
          int numPages=payload.get(Constants.NUM_PAGES).getAsInt();
          int pagesCompleted=payload.get(Constants.PAGES_COMPLETED).getAsInt();
          return new PresentationPageGeneratedReplyMessage(meetingId,presentationId,numPages,code,messageKey,presentationName,pagesCompleted);
        }
      }
    }
  }
  return null;
}
