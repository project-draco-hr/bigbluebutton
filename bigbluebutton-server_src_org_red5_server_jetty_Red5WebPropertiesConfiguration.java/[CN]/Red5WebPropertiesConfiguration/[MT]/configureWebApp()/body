{
  log.debug("Configuring Jetty webapp");
  WebAppContext context=getWebAppContext();
  if (context.isStarted()) {
    log.debug("Cannot configure webapp after it is started");
    return;
  }
  Resource webInf=context.getWebInf();
  if (webInf != null && webInf.isDirectory()) {
    Resource config=webInf.addPath("red5-web.properties");
    if (config.exists()) {
      log.debug("Configuring red5-web.properties");
      Properties props=new Properties();
      props.load(config.getInputStream());
      String contextPath=props.getProperty("webapp.contextPath");
      String virtualHosts=props.getProperty("webapp.virtualHosts");
      String[] hostnames=virtualHosts.split(",");
      for (int i=0; i < hostnames.length; i++) {
        hostnames[i]=hostnames[i].trim();
        if (hostnames[i].equals("*")) {
          hostnames=null;
          break;
        }
      }
      context.setVirtualHosts(hostnames);
      context.setContextPath(contextPath);
      LoaderBase.setRed5ApplicationContext(contextPath,new JettyApplicationContext(context));
    }
  }
 else   if (webInf == null) {
    log.info("No WEB-INF directory found for " + context.getContextPath() + ", creating default application.");
    BeanFactoryLocator bfl=ContextSingletonBeanFactoryLocator.getInstance("red5.xml");
    BeanFactoryReference bfr=bfl.useBeanFactory("red5.common");
    WebScope scope=new WebScope();
    IServer server=(IServer)bfr.getFactory().getBean(IServer.ID);
    scope.setServer(server);
    scope.setGlobalScope(server.getGlobal("default"));
    ApplicationContext appCtx=JettyLoader.getApplicationContext();
    ContextLoader loader=(ContextLoader)appCtx.getBean("context.loader");
    appCtx=loader.getContext("default.context");
    Context scopeContext=new Context();
    scopeContext.setContextPath("/");
    scopeContext.setClientRegistry((IClientRegistry)appCtx.getBean("global.clientRegistry"));
    scopeContext.setMappingStrategy((IMappingStrategy)appCtx.getBean("global.mappingStrategy"));
    scopeContext.setServiceInvoker((IServiceInvoker)appCtx.getBean("global.serviceInvoker"));
    scopeContext.setScopeResolver((IScopeResolver)appCtx.getBean("red5.scopeResolver"));
    GenericWebApplicationContext webCtx=new GenericWebApplicationContext();
    webCtx.setDisplayName("Automatic generated WebAppContext");
    webCtx.setParent(appCtx);
    webCtx.setServletContext(ContextHandler.getCurrentContext());
    scopeContext.setApplicationContext(webCtx);
    scope.setContext(scopeContext);
    scope.setHandler(new ApplicationAdapter());
    scope.setContextPath(context.getContextPath());
    scope.setVirtualHosts("*");
    LoaderBase.setRed5ApplicationContext(context.getContextPath(),new JettyApplicationContext(context));
    scope.register();
  }
}
