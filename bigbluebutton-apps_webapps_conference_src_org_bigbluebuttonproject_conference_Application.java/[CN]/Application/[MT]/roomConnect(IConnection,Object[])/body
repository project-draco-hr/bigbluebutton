{
  log.info("Blindside.roomConnect " + conn.getClient().getId());
  String room=((String)params[0]).toString();
  String username=((String)params[1]).toString();
  String password=((String)params[2]).toString();
  log.info("User logging [" + room + ","+ username+ ","+ password+ "]");
  Room confRoom=getRoom(room);
  if (confRoom == null) {
    log.info("Cannot find room[" + room + "]");
    rejectClient("Room not found.");
    return true;
  }
  String modPass=confRoom.getModeratorPassword();
  String viewPass=confRoom.getViewerPassword();
  if (!(modPass.equals(password)) && !(viewPass.equals(password))) {
    log.info("Wrong password for [" + room + ","+ password+ "]");
    log.info("Passwords are [" + modPass + ","+ viewPass+ "]");
    rejectClient("Wrong password.");
    return true;
  }
  Role role=Role.VIEWER;
  if (modPass.equals(password))   role=Role.MODERATOR;
 else   role=Role.VIEWER;
  setUserIdAndRole(conn,role);
  ISharedObject so=null;
  if (!hasSharedObject(conn.getScope(),PARTICIPANTS_SO)) {
    createSharedObject(conn.getScope(),PARTICIPANTS_SO,false);
    so=getSharedObject(conn.getScope(),PARTICIPANTS_SO,false);
  }
 else {
    so=getSharedObject(conn.getScope(),PARTICIPANTS_SO,false);
  }
  Participant newParticipant=new Participant(new Integer(conn.getClient().getId()),username,role.toString());
  confRoom.addParticipant(newParticipant);
  ArrayList<Participant> participants=confRoom.getParticipants();
  so.beginUpdate();
  so.setAttribute(newParticipant.userid.toString(),newParticipant);
  log.info("Blindside::roomConnect - Adding[" + newParticipant.userid + ","+ participants.size()+ "]");
  so.endUpdate();
  return true;
}
