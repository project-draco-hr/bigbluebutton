{
  if (an.getType().equalsIgnoreCase(WhiteboardBridge.PENCIL_TYPE)) {
    String shapeType="path";
    String shapeID=Long.toString(System.currentTimeMillis());
    ArrayList<Object> data=new ArrayList<Object>();
    Map map=an.getAnnotation();
    ArrayList points=(ArrayList)map.get("points");
    Jedis jedis=messagingService.createRedisClient();
    HashMap<String,String> mapAnn=new HashMap<String,String>();
    mapAnn.put("shape",shapeType);
    data.add(points);
    data.add((Integer.parseInt(map.get("color").toString()) == 0) ? "#000000" : map.get("color"));
    data.add(map.get("thickness"));
    Gson gson=new Gson();
    mapAnn.put("data",gson.toJson(data));
    jedis.rpush("meeting-" + meetingID + "-presentation-"+ map.get("presentationID")+ "-page-"+ map.get("pageNumber")+ "-currentshapes",shapeID);
    jedis.hmset("meeting-" + meetingID + "-presentation-"+ map.get("presentationID")+ "-page-"+ map.get("pageNumber")+ "-shape-"+ shapeID,mapAnn);
    messagingService.dropRedisClient(jedis);
  }
 else   if (an.getType().equalsIgnoreCase(WhiteboardBridge.RECTANGLE_TYPE)) {
    if (an.getStatus().equalsIgnoreCase("DRAW_END")) {
      String shapeType="rect";
      String shapeID=Long.toString(System.currentTimeMillis());
      ArrayList<Object> data=new ArrayList<Object>();
      Map map=an.getAnnotation();
      ArrayList points=(ArrayList)map.get("points");
      Double pX=(Double)points.get(0);
      Double pY=(Double)points.get(1);
      Double pW=(Double)points.get(2);
      Double pH=(Double)points.get(3);
      Jedis jedis=messagingService.createRedisClient();
      HashMap<String,String> mapAnn=new HashMap<String,String>();
      mapAnn.put("shape",shapeType);
      data.add(pX / 100);
      data.add(pY / 100);
      data.add(pW / 100);
      data.add(pH / 100);
      data.add((Integer.parseInt(map.get("color").toString()) == 0) ? "#000000" : map.get("color"));
      data.add(map.get("thickness"));
      Gson gson=new Gson();
      mapAnn.put("data",gson.toJson(data));
      jedis.rpush("meeting-" + meetingID + "-presentation-"+ map.get("presentationID")+ "-page-"+ map.get("pageNumber")+ "-currentshapes",shapeID);
      jedis.hmset("meeting-" + meetingID + "-presentation-"+ map.get("presentationID")+ "-page-"+ map.get("pageNumber")+ "-shape-"+ shapeID,mapAnn);
      messagingService.dropRedisClient(jedis);
    }
  }
 else {
    log.debug("checking annotation: " + an.getAnnotation().toString());
  }
}
