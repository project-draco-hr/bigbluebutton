{
  if (an.getType().equalsIgnoreCase(WhiteboardBridge.PENCIL_TYPE)) {
    Map map=an.getAnnotation();
    ArrayList<Object> updates=new ArrayList<Object>();
    updates.add(meetingID);
    updates.add("shapePoints");
    updates.add("line");
    updates.add(map.get("color"));
    updates.add(map.get("thickness"));
    updates.add(map.get("points"));
    Gson gson=new Gson();
    messagingService.send(MessagingConstants.BIGBLUEBUTTON_BRIDGE,gson.toJson(updates));
  }
 else   if (an.getType().equalsIgnoreCase(WhiteboardBridge.RECTANGLE_TYPE)) {
    Map map=an.getAnnotation();
    ArrayList<Object> updates=new ArrayList<Object>();
    updates.add(meetingID);
    ArrayList points=(ArrayList)map.get("points");
    Double pX=(Double)points.get(0);
    Double pY=(Double)points.get(1);
    Double pW=(Double)points.get(2);
    Double pH=(Double)points.get(3);
    ArrayList<Object> data=new ArrayList<Object>();
    if (an.getStatus().equalsIgnoreCase("DRAW_START")) {
      updates.add("makeShape");
      data.add(pX / 100);
      data.add(pY / 100);
      data.add(map.get("color"));
      data.add(map.get("thickness"));
    }
 else {
      updates.add("updShape");
      data.add(pX / 100);
      data.add(pY / 100);
      data.add(pW / 100);
      data.add(pH / 100);
    }
    updates.add("rect");
    updates.add(data);
    Gson gson=new Gson();
    messagingService.send(MessagingConstants.BIGBLUEBUTTON_BRIDGE,gson.toJson(updates));
  }
}
