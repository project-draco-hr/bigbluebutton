{
  final IServiceCall call=invoke.getCall();
  final Map params=invoke.getConnectionParams();
  String host=getHostname((String)params.get("tcUrl"));
  if (host.endsWith(":1935")) {
    host=host.substring(0,host.length() - 5);
  }
  String path=(String)params.get("app");
  if (path.indexOf("?") != -1) {
    int idx=path.indexOf("?");
    params.put("queryString",path.substring(idx));
    path=path.substring(0,idx);
  }
  params.put("path",path);
  final String sessionId=null;
  conn.setup(host,path,sessionId,params);
  if (!checkPermission(conn)) {
    call.setStatus(Call.STATUS_ACCESS_DENIED);
    if (call instanceof IPendingServiceCall) {
      IPendingServiceCall pc=(IPendingServiceCall)call;
      pc.setResult(getStatus(NC_CONNECT_REJECTED));
    }
    Invoke reply=new Invoke();
    reply.setCall(call);
    reply.setInvokeId(invoke.getInvokeId());
    channel.write(reply);
    conn.close();
  }
 else {
synchronized (rtmp) {
      sendConnectMessage(conn);
      rtmp.setState(RTMP.STATE_EDGE_CONNECT_ORIGIN_SENT);
      Packet packet=new Packet(header);
      packet.setMessage(invoke);
      forwardPacket(conn,packet);
      rtmp.setState(RTMP.STATE_ORIGIN_CONNECT_FORWARDED);
      if (Integer.valueOf(3).equals(params.get("objectEncoding")) && call instanceof IPendingServiceCall) {
        rtmp.setEncoding(Encoding.AMF3);
      }
    }
  }
}
