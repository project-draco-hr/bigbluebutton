{
  this.widthInfo=data.getShort();
  this.heightInfo=data.getShort();
  this.width=this.widthInfo & 0xfff;
  this.height=this.heightInfo & 0xfff;
  this.blockWidth=this.widthInfo & 0xf000;
  this.blockWidth=(this.blockWidth >> 12) + 1;
  this.blockWidth<<=4;
  this.blockHeight=this.heightInfo & 0xf000;
  this.blockHeight=(this.blockHeight >> 12) + 1;
  this.blockHeight<<=4;
  int xblocks=this.width / this.blockWidth;
  if ((this.width % this.blockWidth) != 0) {
    xblocks+=1;
  }
  int yblocks=this.height / this.blockHeight;
  if ((this.height % this.blockHeight) != 0) {
    yblocks+=1;
  }
  this.blockCount=xblocks * yblocks;
  int blockSize=this.maxCompressedSize(this.blockWidth * this.blockHeight * 3);
  int totalBlockSize=blockSize * this.blockCount;
  if (this.totalBlockDataSize != totalBlockSize) {
    log.info("Allocating memory for " + this.blockCount + " compressed blocks.");
    this.blockDataSize=blockSize;
    this.totalBlockDataSize=totalBlockSize;
    this.blockData=new byte[blockSize * this.blockCount];
    this.blockSize=new int[blockSize * this.blockCount];
    for (int idx=0; idx < this.blockCount; idx++) {
      this.blockSize[idx]=0;
    }
  }
}
